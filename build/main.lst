ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_CAN_RxFifo0MsgPendingCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_CAN_RxFifo0MsgPendingCallback:
  27              	.LVL0:
  28              	.LFB125:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "can.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** CAN_RxHeaderTypeDef rxHeader;
  49:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader;
  50:Core/Src/main.c **** uint8_t rxData[8] = {0,0,0,0,0,0,0,0};
  51:Core/Src/main.c **** CAN_FilterTypeDef canfil;
  52:Core/Src/main.c **** uint32_t canMailbox;
  53:Core/Src/main.c **** uint8_t* Msg = &rxData;
  54:Core/Src/main.c **** uint32_t RXID;
  55:Core/Src/main.c **** uint32_t INSERTHERE; //This is a random variable that needs changing of both type and content. Only
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief  The application entry point.
  71:Core/Src/main.c ****   * @retval int
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** int main(void)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 3


  87:Core/Src/main.c ****   //initialise CAN filters
  88:Core/Src/main.c ****   canfil.FilterBank = 0;
  89:Core/Src/main.c ****   canfil.FilterMode = CAN_FILTERMODE_IDMASK;
  90:Core/Src/main.c ****   canfil.FilterFIFOAssignment = CAN_RX_FIFO0;
  91:Core/Src/main.c ****   canfil.FilterIdHigh = 0;
  92:Core/Src/main.c ****   canfil.FilterIdLow = 0;
  93:Core/Src/main.c ****   canfil.FilterMaskIdHigh = 0;
  94:Core/Src/main.c ****   canfil.FilterMaskIdLow = 0;
  95:Core/Src/main.c ****   canfil.FilterScale = CAN_FILTERSCALE_32BIT;
  96:Core/Src/main.c ****   canfil.FilterActivation = ENABLE;
  97:Core/Src/main.c ****   canfil.SlaveStartFilterBank = 14;
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   //setup CAN header for transmitting messages
 101:Core/Src/main.c ****   txHeader.DLC = 8; // Number of bites to be transmitted max- 8
 102:Core/Src/main.c ****   txHeader.IDE = CAN_ID_STD;
 103:Core/Src/main.c ****   txHeader.RTR = CAN_RTR_DATA;
 104:Core/Src/main.c ****   txHeader.StdId = 0x030;
 105:Core/Src/main.c ****   txHeader.ExtId = 0x02;
 106:Core/Src/main.c ****   txHeader.TransmitGlobalTime = DISABLE;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   //initialize CAN bus
 110:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan, &canfil);
 111:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 112:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END Init */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Configure the system clock */
 117:Core/Src/main.c ****   SystemClock_Config();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END SysInit */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Initialize all configured peripherals */
 124:Core/Src/main.c ****   MX_GPIO_Init();
 125:Core/Src/main.c ****   MX_CAN_Init();
 126:Core/Src/main.c ****   MX_USART2_UART_Init();
 127:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 4


 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 161:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 169:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 182:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan1){
  30              		.loc 1 182 65 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** }
  35              		.loc 1 184 1 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE125:
  40              		.section	.text.RBlinker,"ax",%progbits
  41              		.align	1
  42              		.global	RBlinker
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	RBlinker:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 5


  48              	.LFB126:
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** void RBlinker(){
  49              		.loc 1 186 16 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 08B5     		push	{r3, lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 3, -8
  57              		.cfi_offset 14, -4
  58              	.L3:
 187:Core/Src/main.c **** while(1){
  59              		.loc 1 187 1 view .LVU3
 188:Core/Src/main.c ****   HAL_GPIO_TogglePin(RINDIC_GPIO_Port, RINDIC_Pin);
  60              		.loc 1 188 3 view .LVU4
  61 0002 4FF40071 		mov	r1, #512
  62 0006 4FF09040 		mov	r0, #1207959552
  63 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
  64              	.LVL1:
 189:Core/Src/main.c ****   HAL_Delay(750);
  65              		.loc 1 189 3 view .LVU5
  66 000e 40F2EE20 		movw	r0, #750
  67 0012 FFF7FEFF 		bl	HAL_Delay
  68              	.LVL2:
 190:Core/Src/main.c ****   if(rxData == INSERTHERE){
  69              		.loc 1 190 3 view .LVU6
  70              		.loc 1 190 13 is_stmt 0 view .LVU7
  71 0016 064B     		ldr	r3, .L5
  72 0018 1A68     		ldr	r2, [r3]
  73              		.loc 1 190 5 view .LVU8
  74 001a 064B     		ldr	r3, .L5+4
  75 001c 9A42     		cmp	r2, r3
  76 001e F0D1     		bne	.L3
 191:Core/Src/main.c ****     HAL_GPIO_WritePin(RINDIC_GPIO_Port, RINDIC_Pin, RESET);
  77              		.loc 1 191 5 is_stmt 1 view .LVU9
  78 0020 0022     		movs	r2, #0
  79 0022 4FF40071 		mov	r1, #512
  80 0026 4FF09040 		mov	r0, #1207959552
  81 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  82              	.LVL3:
 192:Core/Src/main.c ****     return;
  83              		.loc 1 192 5 view .LVU10
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c **** }
 195:Core/Src/main.c **** }
  84              		.loc 1 195 1 is_stmt 0 view .LVU11
  85 002e 08BD     		pop	{r3, pc}
  86              	.L6:
  87              		.align	2
  88              	.L5:
  89 0030 00000000 		.word	.LANCHOR0
  90 0034 00000000 		.word	.LANCHOR1
  91              		.cfi_endproc
  92              	.LFE126:
  94              		.section	.text.LBlinker,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 6


  95              		.align	1
  96              		.global	LBlinker
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 101              	LBlinker:
 102              	.LFB127:
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** void LBlinker(){
 103              		.loc 1 197 16 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 08B5     		push	{r3, lr}
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 3, -8
 111              		.cfi_offset 14, -4
 112              	.L8:
 198:Core/Src/main.c **** while(1){
 113              		.loc 1 198 1 view .LVU13
 199:Core/Src/main.c ****   HAL_GPIO_TogglePin(LINDIC_GPIO_Port, LINDIC_Pin);
 114              		.loc 1 199 3 view .LVU14
 115 0002 4FF48061 		mov	r1, #1024
 116 0006 4FF09040 		mov	r0, #1207959552
 117 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 118              	.LVL4:
 200:Core/Src/main.c ****   HAL_Delay(750);
 119              		.loc 1 200 3 view .LVU15
 120 000e 40F2EE20 		movw	r0, #750
 121 0012 FFF7FEFF 		bl	HAL_Delay
 122              	.LVL5:
 201:Core/Src/main.c ****   if(rxData == INSERTHERE){
 123              		.loc 1 201 3 view .LVU16
 124              		.loc 1 201 13 is_stmt 0 view .LVU17
 125 0016 064B     		ldr	r3, .L10
 126 0018 1A68     		ldr	r2, [r3]
 127              		.loc 1 201 5 view .LVU18
 128 001a 064B     		ldr	r3, .L10+4
 129 001c 9A42     		cmp	r2, r3
 130 001e F0D1     		bne	.L8
 202:Core/Src/main.c ****     HAL_GPIO_WritePin(LINDIC_GPIO_Port, LINDIC_Pin, RESET);
 131              		.loc 1 202 5 is_stmt 1 view .LVU19
 132 0020 0022     		movs	r2, #0
 133 0022 4FF48061 		mov	r1, #1024
 134 0026 4FF09040 		mov	r0, #1207959552
 135 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 136              	.LVL6:
 203:Core/Src/main.c ****     return;
 137              		.loc 1 203 5 view .LVU20
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** }
 138              		.loc 1 206 1 is_stmt 0 view .LVU21
 139 002e 08BD     		pop	{r3, pc}
 140              	.L11:
 141              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 7


 142              	.L10:
 143 0030 00000000 		.word	.LANCHOR0
 144 0034 00000000 		.word	.LANCHOR1
 145              		.cfi_endproc
 146              	.LFE127:
 148              		.section	.text.Brake,"ax",%progbits
 149              		.align	1
 150              		.global	Brake
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	Brake:
 156              	.LFB128:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** void Brake(){
 157              		.loc 1 208 13 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161 0000 08B5     		push	{r3, lr}
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 3, -8
 165              		.cfi_offset 14, -4
 209:Core/Src/main.c **** HAL_GPIO_WritePin(BRAKE_GPIO_Port, BRAKE_Pin, SET);
 166              		.loc 1 209 1 view .LVU23
 167 0002 0122     		movs	r2, #1
 168 0004 1146     		mov	r1, r2
 169 0006 0248     		ldr	r0, .L14
 170 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 171              	.LVL7:
 210:Core/Src/main.c **** return;
 172              		.loc 1 210 1 view .LVU24
 211:Core/Src/main.c **** }
 173              		.loc 1 211 1 is_stmt 0 view .LVU25
 174 000c 08BD     		pop	{r3, pc}
 175              	.L15:
 176 000e 00BF     		.align	2
 177              	.L14:
 178 0010 00040048 		.word	1207960576
 179              		.cfi_endproc
 180              	.LFE128:
 182              		.section	.text.BrakeR,"ax",%progbits
 183              		.align	1
 184              		.global	BrakeR
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	BrakeR:
 190              	.LFB129:
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** void BrakeR(){
 191              		.loc 1 213 14 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 8


 196              	.LCFI3:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 214:Core/Src/main.c **** HAL_GPIO_WritePin(BRAKE_GPIO_Port, BRAKE_Pin, RESET);
 200              		.loc 1 214 1 view .LVU27
 201 0002 0022     		movs	r2, #0
 202 0004 0121     		movs	r1, #1
 203 0006 0248     		ldr	r0, .L18
 204 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 205              	.LVL8:
 215:Core/Src/main.c **** return;
 206              		.loc 1 215 1 view .LVU28
 216:Core/Src/main.c **** }
 207              		.loc 1 216 1 is_stmt 0 view .LVU29
 208 000c 08BD     		pop	{r3, pc}
 209              	.L19:
 210 000e 00BF     		.align	2
 211              	.L18:
 212 0010 00040048 		.word	1207960576
 213              		.cfi_endproc
 214              	.LFE129:
 216              		.section	.text.FogF,"ax",%progbits
 217              		.align	1
 218              		.global	FogF
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	FogF:
 224              	.LFB130:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** void FogF(){
 225              		.loc 1 218 12 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI4:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 219:Core/Src/main.c **** HAL_GPIO_WritePin(FRONTFOG_GPIO_Port, FRONTFOG_Pin, SET);
 234              		.loc 1 219 1 view .LVU31
 235 0002 0122     		movs	r2, #1
 236 0004 4FF48071 		mov	r1, #256
 237 0008 4FF09040 		mov	r0, #1207959552
 238 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 239              	.LVL9:
 220:Core/Src/main.c **** return;
 240              		.loc 1 220 1 view .LVU32
 221:Core/Src/main.c **** }
 241              		.loc 1 221 1 is_stmt 0 view .LVU33
 242 0010 08BD     		pop	{r3, pc}
 243              		.cfi_endproc
 244              	.LFE130:
 246              		.section	.text.FogFR,"ax",%progbits
 247              		.align	1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 9


 248              		.global	FogFR
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	FogFR:
 254              	.LFB131:
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** void FogFR(){
 255              		.loc 1 223 13 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI5:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 224:Core/Src/main.c **** HAL_GPIO_WritePin(FRONTFOG_GPIO_Port, FRONTFOG_Pin, RESET);
 264              		.loc 1 224 1 view .LVU35
 265 0002 0022     		movs	r2, #0
 266 0004 4FF48071 		mov	r1, #256
 267 0008 4FF09040 		mov	r0, #1207959552
 268 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 269              	.LVL10:
 225:Core/Src/main.c **** return;
 270              		.loc 1 225 1 view .LVU36
 226:Core/Src/main.c **** }
 271              		.loc 1 226 1 is_stmt 0 view .LVU37
 272 0010 08BD     		pop	{r3, pc}
 273              		.cfi_endproc
 274              	.LFE131:
 276              		.section	.text.FogR,"ax",%progbits
 277              		.align	1
 278              		.global	FogR
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	FogR:
 284              	.LFB132:
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** void FogR(){
 285              		.loc 1 228 12 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 08B5     		push	{r3, lr}
 290              	.LCFI6:
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 3, -8
 293              		.cfi_offset 14, -4
 229:Core/Src/main.c **** HAL_GPIO_WritePin(REARFOG_GPIO_Port, REARFOG_Pin, SET);
 294              		.loc 1 229 1 view .LVU39
 295 0002 0122     		movs	r2, #1
 296 0004 0221     		movs	r1, #2
 297 0006 0248     		ldr	r0, .L26
 298 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 299              	.LVL11:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 10


 230:Core/Src/main.c **** return;
 300              		.loc 1 230 1 view .LVU40
 231:Core/Src/main.c **** }
 301              		.loc 1 231 1 is_stmt 0 view .LVU41
 302 000c 08BD     		pop	{r3, pc}
 303              	.L27:
 304 000e 00BF     		.align	2
 305              	.L26:
 306 0010 00040048 		.word	1207960576
 307              		.cfi_endproc
 308              	.LFE132:
 310              		.section	.text.FogRR,"ax",%progbits
 311              		.align	1
 312              		.global	FogRR
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 317              	FogRR:
 318              	.LFB133:
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** void FogRR(){
 319              		.loc 1 234 13 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 08B5     		push	{r3, lr}
 324              	.LCFI7:
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 235:Core/Src/main.c **** HAL_GPIO_WritePin(REARFOG_GPIO_Port, REARFOG_Pin, RESET);
 328              		.loc 1 235 1 view .LVU43
 329 0002 0022     		movs	r2, #0
 330 0004 0221     		movs	r1, #2
 331 0006 0248     		ldr	r0, .L30
 332 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 333              	.LVL12:
 236:Core/Src/main.c **** return;
 334              		.loc 1 236 1 view .LVU44
 237:Core/Src/main.c **** }
 335              		.loc 1 237 1 is_stmt 0 view .LVU45
 336 000c 08BD     		pop	{r3, pc}
 337              	.L31:
 338 000e 00BF     		.align	2
 339              	.L30:
 340 0010 00040048 		.word	1207960576
 341              		.cfi_endproc
 342              	.LFE133:
 344              		.section	.text.Day,"ax",%progbits
 345              		.align	1
 346              		.global	Day
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	Day:
 352              	.LFB134:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 11


 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** void Day(){
 353              		.loc 1 239 11 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 08B5     		push	{r3, lr}
 358              	.LCFI8:
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
 240:Core/Src/main.c **** HAL_GPIO_WritePin(FROTDAY_GPIO_Port, FROTDAY_Pin, SET);
 362              		.loc 1 240 1 view .LVU47
 363 0002 0122     		movs	r2, #1
 364 0004 0221     		movs	r1, #2
 365 0006 4FF09040 		mov	r0, #1207959552
 366 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 367              	.LVL13:
 241:Core/Src/main.c **** return;
 368              		.loc 1 241 1 view .LVU48
 242:Core/Src/main.c **** }
 369              		.loc 1 242 1 is_stmt 0 view .LVU49
 370 000e 08BD     		pop	{r3, pc}
 371              		.cfi_endproc
 372              	.LFE134:
 374              		.section	.text.DayR,"ax",%progbits
 375              		.align	1
 376              		.global	DayR
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 381              	DayR:
 382              	.LFB135:
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** void DayR(){
 383              		.loc 1 245 12 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387 0000 08B5     		push	{r3, lr}
 388              	.LCFI9:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 3, -8
 391              		.cfi_offset 14, -4
 246:Core/Src/main.c **** HAL_GPIO_WritePin(FROTDAY_GPIO_Port, FROTDAY_Pin, RESET);
 392              		.loc 1 246 1 view .LVU51
 393 0002 0022     		movs	r2, #0
 394 0004 0221     		movs	r1, #2
 395 0006 4FF09040 		mov	r0, #1207959552
 396 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 397              	.LVL14:
 247:Core/Src/main.c **** return;
 398              		.loc 1 247 1 view .LVU52
 248:Core/Src/main.c **** }
 399              		.loc 1 248 1 is_stmt 0 view .LVU53
 400 000e 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 12


 401              		.cfi_endproc
 402              	.LFE135:
 404              		.section	.text.safe,"ax",%progbits
 405              		.align	1
 406              		.global	safe
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 411              	safe:
 412              	.LFB136:
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** void safe(){
 413              		.loc 1 250 12 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 08B5     		push	{r3, lr}
 418              	.LCFI10:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
 422              	.L37:
 251:Core/Src/main.c **** while(1){
 423              		.loc 1 251 1 view .LVU55
 252:Core/Src/main.c ****   HAL_GPIO_TogglePin(SAFELIGHT_GPIO_Port, SAFELIGHT_Pin);
 424              		.loc 1 252 3 view .LVU56
 425 0002 1021     		movs	r1, #16
 426 0004 0848     		ldr	r0, .L39
 427 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 428              	.LVL15:
 253:Core/Src/main.c ****   HAL_Delay(750);
 429              		.loc 1 253 3 view .LVU57
 430 000a 40F2EE20 		movw	r0, #750
 431 000e FFF7FEFF 		bl	HAL_Delay
 432              	.LVL16:
 254:Core/Src/main.c ****   if(rxData == INSERTHERE){
 433              		.loc 1 254 3 view .LVU58
 434              		.loc 1 254 13 is_stmt 0 view .LVU59
 435 0012 064B     		ldr	r3, .L39+4
 436 0014 1A68     		ldr	r2, [r3]
 437              		.loc 1 254 5 view .LVU60
 438 0016 064B     		ldr	r3, .L39+8
 439 0018 9A42     		cmp	r2, r3
 440 001a F2D1     		bne	.L37
 255:Core/Src/main.c ****     HAL_GPIO_WritePin(SAFELIGHT_GPIO_Port, SAFELIGHT_Pin, RESET);
 441              		.loc 1 255 5 is_stmt 1 view .LVU61
 442 001c 0022     		movs	r2, #0
 443 001e 1021     		movs	r1, #16
 444 0020 0148     		ldr	r0, .L39
 445 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 446              	.LVL17:
 256:Core/Src/main.c ****     return;
 447              		.loc 1 256 5 view .LVU62
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c **** }
 259:Core/Src/main.c **** }
 448              		.loc 1 259 1 is_stmt 0 view .LVU63
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 13


 449 0026 08BD     		pop	{r3, pc}
 450              	.L40:
 451              		.align	2
 452              	.L39:
 453 0028 00040048 		.word	1207960576
 454 002c 00000000 		.word	.LANCHOR0
 455 0030 00000000 		.word	.LANCHOR1
 456              		.cfi_endproc
 457              	.LFE136:
 459              		.section	.text.Hazards,"ax",%progbits
 460              		.align	1
 461              		.global	Hazards
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 466              	Hazards:
 467              	.LFB137:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** void Hazards(){
 468              		.loc 1 261 15 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              	.LCFI11:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 3, -8
 476              		.cfi_offset 14, -4
 477              	.L42:
 262:Core/Src/main.c **** while(1){
 478              		.loc 1 262 1 view .LVU65
 263:Core/Src/main.c ****   HAL_GPIO_TogglePin(RINDIC_GPIO_Port, RINDIC_Pin);
 479              		.loc 1 263 3 view .LVU66
 480 0002 4FF40071 		mov	r1, #512
 481 0006 4FF09040 		mov	r0, #1207959552
 482 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 483              	.LVL18:
 264:Core/Src/main.c ****   HAL_GPIO_TogglePin(LINDIC_GPIO_Port, LINDIC_Pin);
 484              		.loc 1 264 3 view .LVU67
 485 000e 4FF48061 		mov	r1, #1024
 486 0012 4FF09040 		mov	r0, #1207959552
 487 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 488              	.LVL19:
 265:Core/Src/main.c ****   HAL_Delay(750);
 489              		.loc 1 265 3 view .LVU68
 490 001a 40F2EE20 		movw	r0, #750
 491 001e FFF7FEFF 		bl	HAL_Delay
 492              	.LVL20:
 266:Core/Src/main.c ****   if(rxData == INSERTHERE){
 493              		.loc 1 266 3 view .LVU69
 494              		.loc 1 266 13 is_stmt 0 view .LVU70
 495 0022 0A4B     		ldr	r3, .L44
 496 0024 1A68     		ldr	r2, [r3]
 497              		.loc 1 266 5 view .LVU71
 498 0026 0A4B     		ldr	r3, .L44+4
 499 0028 9A42     		cmp	r2, r3
 500 002a EAD1     		bne	.L42
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 14


 267:Core/Src/main.c ****     HAL_GPIO_WritePin(RINDIC_GPIO_Port, RINDIC_Pin, RESET);
 501              		.loc 1 267 5 is_stmt 1 view .LVU72
 502 002c 0022     		movs	r2, #0
 503 002e 4FF40071 		mov	r1, #512
 504 0032 4FF09040 		mov	r0, #1207959552
 505 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 506              	.LVL21:
 268:Core/Src/main.c ****     HAL_GPIO_WritePin(LINDIC_GPIO_Port, LINDIC_Pin, RESET);
 507              		.loc 1 268 5 view .LVU73
 508 003a 0022     		movs	r2, #0
 509 003c 4FF48061 		mov	r1, #1024
 510 0040 4FF09040 		mov	r0, #1207959552
 511 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 512              	.LVL22:
 269:Core/Src/main.c ****     return;
 513              		.loc 1 269 5 view .LVU74
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** }
 514              		.loc 1 272 1 is_stmt 0 view .LVU75
 515 0048 08BD     		pop	{r3, pc}
 516              	.L45:
 517 004a 00BF     		.align	2
 518              	.L44:
 519 004c 00000000 		.word	.LANCHOR0
 520 0050 00000000 		.word	.LANCHOR1
 521              		.cfi_endproc
 522              	.LFE137:
 524              		.section	.text.Error_Handler,"ax",%progbits
 525              		.align	1
 526              		.global	Error_Handler
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	Error_Handler:
 532              	.LFB138:
 273:Core/Src/main.c **** /* USER CODE END 4 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** /**
 276:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 277:Core/Src/main.c ****   * @retval None
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c **** void Error_Handler(void)
 280:Core/Src/main.c **** {
 533              		.loc 1 280 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ Volatile: function does not return.
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 281:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 282:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 283:Core/Src/main.c ****   __disable_irq();
 539              		.loc 1 283 3 view .LVU77
 540              	.LBB4:
 541              	.LBI4:
 542              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 15


   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 16


  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 17


 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 543              		.loc 2 140 27 view .LVU78
 544              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 545              		.loc 2 142 3 view .LVU79
 546              		.syntax unified
 547              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 548 0000 72B6     		cpsid i
 549              	@ 0 "" 2
 550              		.thumb
 551              		.syntax unified
 552              	.L47:
 553              	.LBE5:
 554              	.LBE4:
 284:Core/Src/main.c ****   while (1)
 555              		.loc 1 284 3 discriminator 1 view .LVU80
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****   }
 556              		.loc 1 286 3 discriminator 1 view .LVU81
 284:Core/Src/main.c ****   while (1)
 557              		.loc 1 284 9 discriminator 1 view .LVU82
 558 0002 FEE7     		b	.L47
 559              		.cfi_endproc
 560              	.LFE138:
 562              		.section	.text.SystemClock_Config,"ax",%progbits
 563              		.align	1
 564              		.global	SystemClock_Config
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 569              	SystemClock_Config:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 18


 570              	.LFB124:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 571              		.loc 1 147 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 64
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575 0000 00B5     		push	{lr}
 576              	.LCFI12:
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 14, -4
 579 0002 91B0     		sub	sp, sp, #68
 580              	.LCFI13:
 581              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 582              		.loc 1 148 3 view .LVU84
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 583              		.loc 1 148 22 is_stmt 0 view .LVU85
 584 0004 2822     		movs	r2, #40
 585 0006 0021     		movs	r1, #0
 586 0008 06A8     		add	r0, sp, #24
 587 000a FFF7FEFF 		bl	memset
 588              	.LVL23:
 149:Core/Src/main.c **** 
 589              		.loc 1 149 3 is_stmt 1 view .LVU86
 149:Core/Src/main.c **** 
 590              		.loc 1 149 22 is_stmt 0 view .LVU87
 591 000e 0023     		movs	r3, #0
 592 0010 0193     		str	r3, [sp, #4]
 593 0012 0293     		str	r3, [sp, #8]
 594 0014 0393     		str	r3, [sp, #12]
 595 0016 0493     		str	r3, [sp, #16]
 596 0018 0593     		str	r3, [sp, #20]
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 597              		.loc 1 154 3 is_stmt 1 view .LVU88
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 598              		.loc 1 154 36 is_stmt 0 view .LVU89
 599 001a 0122     		movs	r2, #1
 600 001c 0692     		str	r2, [sp, #24]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 601              		.loc 1 155 3 is_stmt 1 view .LVU90
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 602              		.loc 1 155 30 is_stmt 0 view .LVU91
 603 001e 4FF48033 		mov	r3, #65536
 604 0022 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 605              		.loc 1 156 3 is_stmt 1 view .LVU92
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 606              		.loc 1 157 3 view .LVU93
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 607              		.loc 1 157 30 is_stmt 0 view .LVU94
 608 0024 0A92     		str	r2, [sp, #40]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 609              		.loc 1 158 3 is_stmt 1 view .LVU95
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 610              		.loc 1 158 34 is_stmt 0 view .LVU96
 611 0026 0222     		movs	r2, #2
 612 0028 0D92     		str	r2, [sp, #52]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 19


 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 613              		.loc 1 159 3 is_stmt 1 view .LVU97
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 614              		.loc 1 159 35 is_stmt 0 view .LVU98
 615 002a 0E93     		str	r3, [sp, #56]
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 616              		.loc 1 160 3 is_stmt 1 view .LVU99
 161:Core/Src/main.c ****   {
 617              		.loc 1 161 3 view .LVU100
 161:Core/Src/main.c ****   {
 618              		.loc 1 161 7 is_stmt 0 view .LVU101
 619 002c 06A8     		add	r0, sp, #24
 620 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 621              	.LVL24:
 161:Core/Src/main.c ****   {
 622              		.loc 1 161 6 view .LVU102
 623 0032 70B9     		cbnz	r0, .L52
 168:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 624              		.loc 1 168 3 is_stmt 1 view .LVU103
 168:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 625              		.loc 1 168 31 is_stmt 0 view .LVU104
 626 0034 0F23     		movs	r3, #15
 627 0036 0193     		str	r3, [sp, #4]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 628              		.loc 1 170 3 is_stmt 1 view .LVU105
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 629              		.loc 1 170 34 is_stmt 0 view .LVU106
 630 0038 0223     		movs	r3, #2
 631 003a 0293     		str	r3, [sp, #8]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 632              		.loc 1 171 3 is_stmt 1 view .LVU107
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 633              		.loc 1 171 35 is_stmt 0 view .LVU108
 634 003c 0021     		movs	r1, #0
 635 003e 0391     		str	r1, [sp, #12]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 636              		.loc 1 172 3 is_stmt 1 view .LVU109
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 637              		.loc 1 172 36 is_stmt 0 view .LVU110
 638 0040 0491     		str	r1, [sp, #16]
 173:Core/Src/main.c **** 
 639              		.loc 1 173 3 is_stmt 1 view .LVU111
 173:Core/Src/main.c **** 
 640              		.loc 1 173 36 is_stmt 0 view .LVU112
 641 0042 0591     		str	r1, [sp, #20]
 175:Core/Src/main.c ****   {
 642              		.loc 1 175 3 is_stmt 1 view .LVU113
 175:Core/Src/main.c ****   {
 643              		.loc 1 175 7 is_stmt 0 view .LVU114
 644 0044 01A8     		add	r0, sp, #4
 645 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 646              	.LVL25:
 175:Core/Src/main.c ****   {
 647              		.loc 1 175 6 view .LVU115
 648 004a 20B9     		cbnz	r0, .L53
 179:Core/Src/main.c **** 
 649              		.loc 1 179 1 view .LVU116
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 20


 650 004c 11B0     		add	sp, sp, #68
 651              	.LCFI14:
 652              		.cfi_remember_state
 653              		.cfi_def_cfa_offset 4
 654              		@ sp needed
 655 004e 5DF804FB 		ldr	pc, [sp], #4
 656              	.L52:
 657              	.LCFI15:
 658              		.cfi_restore_state
 163:Core/Src/main.c ****   }
 659              		.loc 1 163 5 is_stmt 1 view .LVU117
 660 0052 FFF7FEFF 		bl	Error_Handler
 661              	.LVL26:
 662              	.L53:
 177:Core/Src/main.c ****   }
 663              		.loc 1 177 5 view .LVU118
 664 0056 FFF7FEFF 		bl	Error_Handler
 665              	.LVL27:
 666              		.cfi_endproc
 667              	.LFE124:
 669              		.section	.text.main,"ax",%progbits
 670              		.align	1
 671              		.global	main
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 676              	main:
 677              	.LFB123:
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 678              		.loc 1 74 1 view -0
 679              		.cfi_startproc
 680              		@ Volatile: function does not return.
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683 0000 08B5     		push	{r3, lr}
 684              	.LCFI16:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 3, -8
 687              		.cfi_offset 14, -4
  82:Core/Src/main.c **** 
 688              		.loc 1 82 3 view .LVU120
 689 0002 FFF7FEFF 		bl	HAL_Init
 690              	.LVL28:
  88:Core/Src/main.c ****   canfil.FilterMode = CAN_FILTERMODE_IDMASK;
 691              		.loc 1 88 3 view .LVU121
  88:Core/Src/main.c ****   canfil.FilterMode = CAN_FILTERMODE_IDMASK;
 692              		.loc 1 88 21 is_stmt 0 view .LVU122
 693 0006 1649     		ldr	r1, .L57
 694 0008 0023     		movs	r3, #0
 695 000a 4B61     		str	r3, [r1, #20]
  89:Core/Src/main.c ****   canfil.FilterFIFOAssignment = CAN_RX_FIFO0;
 696              		.loc 1 89 3 is_stmt 1 view .LVU123
  89:Core/Src/main.c ****   canfil.FilterFIFOAssignment = CAN_RX_FIFO0;
 697              		.loc 1 89 21 is_stmt 0 view .LVU124
 698 000c 8B61     		str	r3, [r1, #24]
  90:Core/Src/main.c ****   canfil.FilterIdHigh = 0;
 699              		.loc 1 90 3 is_stmt 1 view .LVU125
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 21


  90:Core/Src/main.c ****   canfil.FilterIdHigh = 0;
 700              		.loc 1 90 31 is_stmt 0 view .LVU126
 701 000e 0B61     		str	r3, [r1, #16]
  91:Core/Src/main.c ****   canfil.FilterIdLow = 0;
 702              		.loc 1 91 3 is_stmt 1 view .LVU127
  91:Core/Src/main.c ****   canfil.FilterIdLow = 0;
 703              		.loc 1 91 23 is_stmt 0 view .LVU128
 704 0010 0B60     		str	r3, [r1]
  92:Core/Src/main.c ****   canfil.FilterMaskIdHigh = 0;
 705              		.loc 1 92 3 is_stmt 1 view .LVU129
  92:Core/Src/main.c ****   canfil.FilterMaskIdHigh = 0;
 706              		.loc 1 92 22 is_stmt 0 view .LVU130
 707 0012 4B60     		str	r3, [r1, #4]
  93:Core/Src/main.c ****   canfil.FilterMaskIdLow = 0;
 708              		.loc 1 93 3 is_stmt 1 view .LVU131
  93:Core/Src/main.c ****   canfil.FilterMaskIdLow = 0;
 709              		.loc 1 93 27 is_stmt 0 view .LVU132
 710 0014 8B60     		str	r3, [r1, #8]
  94:Core/Src/main.c ****   canfil.FilterScale = CAN_FILTERSCALE_32BIT;
 711              		.loc 1 94 3 is_stmt 1 view .LVU133
  94:Core/Src/main.c ****   canfil.FilterScale = CAN_FILTERSCALE_32BIT;
 712              		.loc 1 94 26 is_stmt 0 view .LVU134
 713 0016 CB60     		str	r3, [r1, #12]
  95:Core/Src/main.c ****   canfil.FilterActivation = ENABLE;
 714              		.loc 1 95 3 is_stmt 1 view .LVU135
  95:Core/Src/main.c ****   canfil.FilterActivation = ENABLE;
 715              		.loc 1 95 22 is_stmt 0 view .LVU136
 716 0018 0122     		movs	r2, #1
 717 001a CA61     		str	r2, [r1, #28]
  96:Core/Src/main.c ****   canfil.SlaveStartFilterBank = 14;
 718              		.loc 1 96 3 is_stmt 1 view .LVU137
  96:Core/Src/main.c ****   canfil.SlaveStartFilterBank = 14;
 719              		.loc 1 96 27 is_stmt 0 view .LVU138
 720 001c 0A62     		str	r2, [r1, #32]
  97:Core/Src/main.c **** 
 721              		.loc 1 97 3 is_stmt 1 view .LVU139
  97:Core/Src/main.c **** 
 722              		.loc 1 97 31 is_stmt 0 view .LVU140
 723 001e 0E22     		movs	r2, #14
 724 0020 4A62     		str	r2, [r1, #36]
 101:Core/Src/main.c ****   txHeader.IDE = CAN_ID_STD;
 725              		.loc 1 101 3 is_stmt 1 view .LVU141
 101:Core/Src/main.c ****   txHeader.IDE = CAN_ID_STD;
 726              		.loc 1 101 16 is_stmt 0 view .LVU142
 727 0022 104A     		ldr	r2, .L57+4
 728 0024 0820     		movs	r0, #8
 729 0026 1061     		str	r0, [r2, #16]
 102:Core/Src/main.c ****   txHeader.RTR = CAN_RTR_DATA;
 730              		.loc 1 102 3 is_stmt 1 view .LVU143
 102:Core/Src/main.c ****   txHeader.RTR = CAN_RTR_DATA;
 731              		.loc 1 102 16 is_stmt 0 view .LVU144
 732 0028 9360     		str	r3, [r2, #8]
 103:Core/Src/main.c ****   txHeader.StdId = 0x030;
 733              		.loc 1 103 3 is_stmt 1 view .LVU145
 103:Core/Src/main.c ****   txHeader.StdId = 0x030;
 734              		.loc 1 103 16 is_stmt 0 view .LVU146
 735 002a D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 22


 104:Core/Src/main.c ****   txHeader.ExtId = 0x02;
 736              		.loc 1 104 3 is_stmt 1 view .LVU147
 104:Core/Src/main.c ****   txHeader.ExtId = 0x02;
 737              		.loc 1 104 18 is_stmt 0 view .LVU148
 738 002c 3020     		movs	r0, #48
 739 002e 1060     		str	r0, [r2]
 105:Core/Src/main.c ****   txHeader.TransmitGlobalTime = DISABLE;
 740              		.loc 1 105 3 is_stmt 1 view .LVU149
 105:Core/Src/main.c ****   txHeader.TransmitGlobalTime = DISABLE;
 741              		.loc 1 105 18 is_stmt 0 view .LVU150
 742 0030 0225     		movs	r5, #2
 743 0032 5560     		str	r5, [r2, #4]
 106:Core/Src/main.c **** 
 744              		.loc 1 106 3 is_stmt 1 view .LVU151
 106:Core/Src/main.c **** 
 745              		.loc 1 106 31 is_stmt 0 view .LVU152
 746 0034 1375     		strb	r3, [r2, #20]
 110:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 747              		.loc 1 110 3 is_stmt 1 view .LVU153
 748 0036 0C4C     		ldr	r4, .L57+8
 749 0038 2046     		mov	r0, r4
 750 003a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 751              	.LVL29:
 111:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 752              		.loc 1 111 3 view .LVU154
 753 003e 2046     		mov	r0, r4
 754 0040 FFF7FEFF 		bl	HAL_CAN_Start
 755              	.LVL30:
 112:Core/Src/main.c **** 
 756              		.loc 1 112 3 view .LVU155
 757 0044 2946     		mov	r1, r5
 758 0046 2046     		mov	r0, r4
 759 0048 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 760              	.LVL31:
 117:Core/Src/main.c **** 
 761              		.loc 1 117 3 view .LVU156
 762 004c FFF7FEFF 		bl	SystemClock_Config
 763              	.LVL32:
 124:Core/Src/main.c ****   MX_CAN_Init();
 764              		.loc 1 124 3 view .LVU157
 765 0050 FFF7FEFF 		bl	MX_GPIO_Init
 766              	.LVL33:
 125:Core/Src/main.c ****   MX_USART2_UART_Init();
 767              		.loc 1 125 3 view .LVU158
 768 0054 FFF7FEFF 		bl	MX_CAN_Init
 769              	.LVL34:
 126:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 770              		.loc 1 126 3 view .LVU159
 771 0058 FFF7FEFF 		bl	MX_USART2_UART_Init
 772              	.LVL35:
 773              	.L55:
 133:Core/Src/main.c ****   {
 774              		.loc 1 133 3 discriminator 1 view .LVU160
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 775              		.loc 1 138 3 discriminator 1 view .LVU161
 133:Core/Src/main.c ****   {
 776              		.loc 1 133 9 discriminator 1 view .LVU162
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 23


 777 005c FEE7     		b	.L55
 778              	.L58:
 779 005e 00BF     		.align	2
 780              	.L57:
 781 0060 00000000 		.word	.LANCHOR2
 782 0064 00000000 		.word	.LANCHOR3
 783 0068 00000000 		.word	hcan
 784              		.cfi_endproc
 785              	.LFE123:
 787              		.global	INSERTHERE
 788              		.global	RXID
 789              		.global	Msg
 790              		.global	canMailbox
 791              		.global	canfil
 792              		.global	rxData
 793              		.global	txHeader
 794              		.global	rxHeader
 795              		.section	.bss.INSERTHERE,"aw",%nobits
 796              		.align	2
 797              		.set	.LANCHOR0,. + 0
 800              	INSERTHERE:
 801 0000 00000000 		.space	4
 802              		.section	.bss.RXID,"aw",%nobits
 803              		.align	2
 806              	RXID:
 807 0000 00000000 		.space	4
 808              		.section	.bss.canMailbox,"aw",%nobits
 809              		.align	2
 812              	canMailbox:
 813 0000 00000000 		.space	4
 814              		.section	.bss.canfil,"aw",%nobits
 815              		.align	2
 816              		.set	.LANCHOR2,. + 0
 819              	canfil:
 820 0000 00000000 		.space	40
 820      00000000 
 820      00000000 
 820      00000000 
 820      00000000 
 821              		.section	.bss.rxData,"aw",%nobits
 822              		.align	2
 823              		.set	.LANCHOR1,. + 0
 826              	rxData:
 827 0000 00000000 		.space	8
 827      00000000 
 828              		.section	.bss.rxHeader,"aw",%nobits
 829              		.align	2
 832              	rxHeader:
 833 0000 00000000 		.space	28
 833      00000000 
 833      00000000 
 833      00000000 
 833      00000000 
 834              		.section	.bss.txHeader,"aw",%nobits
 835              		.align	2
 836              		.set	.LANCHOR3,. + 0
 839              	txHeader:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 24


 840 0000 00000000 		.space	24
 840      00000000 
 840      00000000 
 840      00000000 
 840      00000000 
 841              		.section	.data.Msg,"aw"
 842              		.align	2
 845              	Msg:
 846 0000 00000000 		.word	rxData
 847              		.text
 848              	.Letext0:
 849              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 850              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 851              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 852              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 853              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 854              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 855              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 856              		.file 10 "Core/Inc/can.h"
 857              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 858              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 859              		.file 13 "Core/Inc/gpio.h"
 860              		.file 14 "Core/Inc/usart.h"
 861              		.file 15 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:20     .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:26     .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:41     .text.RBlinker:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:47     .text.RBlinker:00000000 RBlinker
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:89     .text.RBlinker:00000030 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:95     .text.LBlinker:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:101    .text.LBlinker:00000000 LBlinker
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:143    .text.LBlinker:00000030 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:149    .text.Brake:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:155    .text.Brake:00000000 Brake
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:178    .text.Brake:00000010 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:183    .text.BrakeR:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:189    .text.BrakeR:00000000 BrakeR
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:212    .text.BrakeR:00000010 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:217    .text.FogF:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:223    .text.FogF:00000000 FogF
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:247    .text.FogFR:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:253    .text.FogFR:00000000 FogFR
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:277    .text.FogR:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:283    .text.FogR:00000000 FogR
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:306    .text.FogR:00000010 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:311    .text.FogRR:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:317    .text.FogRR:00000000 FogRR
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:340    .text.FogRR:00000010 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:345    .text.Day:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:351    .text.Day:00000000 Day
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:375    .text.DayR:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:381    .text.DayR:00000000 DayR
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:405    .text.safe:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:411    .text.safe:00000000 safe
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:453    .text.safe:00000028 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:460    .text.Hazards:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:466    .text.Hazards:00000000 Hazards
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:519    .text.Hazards:0000004c $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:525    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:531    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:563    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:569    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:670    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:676    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:781    .text.main:00000060 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:800    .bss.INSERTHERE:00000000 INSERTHERE
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:806    .bss.RXID:00000000 RXID
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:845    .data.Msg:00000000 Msg
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:812    .bss.canMailbox:00000000 canMailbox
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:819    .bss.canfil:00000000 canfil
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:826    .bss.rxData:00000000 rxData
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:839    .bss.txHeader:00000000 txHeader
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:832    .bss.rxHeader:00000000 rxHeader
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:796    .bss.INSERTHERE:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:803    .bss.RXID:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:809    .bss.canMailbox:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:815    .bss.canfil:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:822    .bss.rxData:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:829    .bss.rxHeader:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZToQSW.s 			page 26


C:\Users\User\AppData\Local\Temp\ccZToQSW.s:835    .bss.txHeader:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZToQSW.s:842    .data.Msg:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
HAL_Delay
HAL_GPIO_WritePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
MX_GPIO_Init
MX_CAN_Init
MX_USART2_UART_Init
hcan
