ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_TIM_PeriodElapsedCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_TIM_PeriodElapsedCallback:
  27              	.LVL0:
  28              	.LFB127:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "can.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 2


  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** CAN_RxHeaderTypeDef rxHeader;
  60:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader;
  61:Core/Src/main.c **** uint8_t rxData[8];      //[Brake, FogF, FogR, Day, RearPos, Reverse, FrontFull, FrontHigh, Horn, In
  62:Core/Src/main.c **** uint8_t txData[8];      //could be used for status or heartbeat messages to driver controls board, 
  63:Core/Src/main.c **** uint32_t canRxMailbox;
  64:Core/Src/main.c **** uint32_t canTxMailbox;
  65:Core/Src/main.c **** uint32_t RXID;
  66:Core/Src/main.c **** int UART_Start_Flag = 1; //Flag to be checked in the while loop for reactivation of UART receive
  67:Core/Src/main.c **** int i = 0;
  68:Core/Src/main.c **** //CAN ID for lights
  69:Core/Src/main.c **** const int LIGHTS_ID = 0x730;
  70:Core/Src/main.c **** int RxFlag = 0;
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 3


  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  89:Core/Src/main.c ****   
  90:Core/Src/main.c ****   //initialise CAN filters
  91:Core/Src/main.c ****   CAN_FilterTypeDef canfil;
  92:Core/Src/main.c ****   canfil.FilterMaskIdHigh = 0;
  93:Core/Src/main.c ****   canfil.FilterMaskIdLow = 0;
  94:Core/Src/main.c ****   canfil.FilterIdHigh = 0;
  95:Core/Src/main.c ****   canfil.FilterIdLow = 0;
  96:Core/Src/main.c ****   canfil.FilterBank = 1;
  97:Core/Src/main.c ****   canfil.FilterFIFOAssignment = CAN_FILTER_FIFO0;
  98:Core/Src/main.c ****   canfil.FilterMode = CAN_FILTERMODE_IDMASK;
  99:Core/Src/main.c ****   canfil.FilterScale = CAN_FILTERSCALE_16BIT;
 100:Core/Src/main.c ****   canfil.FilterActivation = ENABLE;
 101:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan, &canfil);
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   //setup CAN header for transmitting messages
 104:Core/Src/main.c ****   txHeader.DLC = 2; // Number of bytes to be transmitted max- 8
 105:Core/Src/main.c ****   txHeader.IDE = CAN_ID_STD;
 106:Core/Src/main.c ****   txHeader.RTR = CAN_RTR_DATA;
 107:Core/Src/main.c ****   txHeader.StdId = 0x400;
 108:Core/Src/main.c ****   txData[0] = 0x3d;
 109:Core/Src/main.c ****   txData[1] = 0x4e;
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Configure the system clock */
 114:Core/Src/main.c ****   SystemClock_Config();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Initialize all configured peripherals */
 121:Core/Src/main.c ****   MX_GPIO_Init();
 122:Core/Src/main.c ****   MX_CAN_Init();
 123:Core/Src/main.c ****   MX_USART2_UART_Init();
 124:Core/Src/main.c ****   MX_TIM2_Init();
 125:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 126:Core/Src/main.c ****   // HAL_UART_Receive_IT(&huart2, rxData, 2);
 127:Core/Src/main.c ****   FullIOReset();
 128:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 129:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 130:Core/Src/main.c ****  
 131:Core/Src/main.c ****   /* USER CODE END 2 */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Infinite loop */
 134:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 135:Core/Src/main.c ****   while (1)
 136:Core/Src/main.c ****   {  
 137:Core/Src/main.c ****     // if(HAL_CAN_AddTxMessage(&hcan, &txHeader, txData, &canTxMailbox)!=HAL_OK){
 138:Core/Src/main.c ****     //   Error_Handler();
 139:Core/Src/main.c ****     // }
 140:Core/Src/main.c ****     // HAL_Delay(1000);
 141:Core/Src/main.c ****     // if(UART_Start_Flag == 1){
 142:Core/Src/main.c ****     //   UART_Start_Flag = 0;
 143:Core/Src/main.c ****     //   HAL_UART_Receive_IT(&huart2, rxData, 2);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 4


 144:Core/Src/main.c ****     // }
 145:Core/Src/main.c ****     for(i=0;i<=5;i++){
 146:Core/Src/main.c ****     heartbeat();
 147:Core/Src/main.c ****     }
 148:Core/Src/main.c ****     txHeader.DLC = 1;
 149:Core/Src/main.c ****     txHeader.StdId = 0x34F;
 150:Core/Src/main.c ****     txData[1]=0;
 151:Core/Src/main.c ****     txData[0]=0xff;
 152:Core/Src/main.c ****     if(HAL_CAN_AddTxMessage(&hcan, &txHeader, txData, &canTxMailbox) != HAL_OK){
 153:Core/Src/main.c ****       Error_Handler();
 154:Core/Src/main.c ****     }
 155:Core/Src/main.c ****     txHeader.StdId = 0x400;
 156:Core/Src/main.c ****     /* USER CODE END WHILE */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c ****   /* USER CODE END 3 */
 161:Core/Src/main.c **** }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief System Clock Configuration
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void SystemClock_Config(void)
 168:Core/Src/main.c **** {
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 173:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 5


 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 203:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan){
 204:Core/Src/main.c ****   if(HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rxHeader, rxData) != HAL_OK){
 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   if(HAL_CAN_AddTxMessage(hcan, &txHeader, rxData, &canTxMailbox) != HAL_OK){
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** void LightsRefresh(uint8_t rxData[]){
 212:Core/Src/main.c ****   FullIOReset();
 213:Core/Src/main.c ****   if((rxData[0] & 1) != 0){           //[Brake, FogF, FogR, Day, RearPos, Reverse, FrontFull, Front
 214:Core/Src/main.c ****     Brake();
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c ****   if((rxData[0] & 2) != 0){
 217:Core/Src/main.c ****     FogF();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   if((rxData[0] & 4) != 0){
 220:Core/Src/main.c ****     FogR();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c ****   if((rxData[0] & 8) != 0){
 223:Core/Src/main.c ****     Day();
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   if((rxData[0] & 16) != 0){
 226:Core/Src/main.c ****     RearPos();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   if((rxData[0] & 32) != 0){
 229:Core/Src/main.c ****     Reverse();
 230:Core/Src/main.c ****   }
 231:Core/Src/main.c ****   if((rxData[0] & 64) != 0){
 232:Core/Src/main.c ****     FrontFull();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   if((rxData[0] & 128) != 0){
 235:Core/Src/main.c ****     FrontHigh();
 236:Core/Src/main.c ****   }
 237:Core/Src/main.c ****   if((rxData[1] & 1) != 0){
 238:Core/Src/main.c ****     Horn();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c ****   if((rxData[1] & 2) != 0||(rxData[1] & 4) != 0||(rxData[6] & 16) != 0||(rxData[7] & 32) != 0){
 241:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c **** //repeat above for UART interrupts for bench testing without proper CAN system and knowledge of dat
 245:Core/Src/main.c **** // void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 246:Core/Src/main.c **** //     UART_Start_Flag = 0;
 247:Core/Src/main.c **** //     FullIOReset();                       //Reset all pinstates for reasignment, should happen fa
 248:Core/Src/main.c **** //     if((rxData[0] & 1) != 0){           //[Brake, FogF, FogR, Day, RearPos, Reverse, FrontFull, 
 249:Core/Src/main.c **** //       Brake();
 250:Core/Src/main.c **** //     }
 251:Core/Src/main.c **** //     if((rxData[0] & 2) != 0){
 252:Core/Src/main.c **** //       FogF();
 253:Core/Src/main.c **** //     }
 254:Core/Src/main.c **** //     if((rxData[0] & 4) != 0){
 255:Core/Src/main.c **** //       FogR();
 256:Core/Src/main.c **** //     }
 257:Core/Src/main.c **** //     if((rxData[0] & 8) != 0){
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 6


 258:Core/Src/main.c **** //       Day();
 259:Core/Src/main.c **** //     }
 260:Core/Src/main.c **** //     if((rxData[0] & 16) != 0){
 261:Core/Src/main.c **** //       RearPos();
 262:Core/Src/main.c **** //     }
 263:Core/Src/main.c **** //     if((rxData[0] & 32) != 0){
 264:Core/Src/main.c **** //       Reverse();
 265:Core/Src/main.c **** //     }
 266:Core/Src/main.c **** //     if((rxData[0] & 64) != 0){
 267:Core/Src/main.c **** //       FrontFull();
 268:Core/Src/main.c **** //     }
 269:Core/Src/main.c **** //     if((rxData[0] & 128) != 0){
 270:Core/Src/main.c **** //       FrontHigh();
 271:Core/Src/main.c **** //     }
 272:Core/Src/main.c **** //     if((rxData[1] & 1) != 0){
 273:Core/Src/main.c **** //       Horn();
 274:Core/Src/main.c **** //     }
 275:Core/Src/main.c **** //     if((rxData[1] & 2) != 0||(rxData[1] & 4) != 0||(rxData[6] & 16) != 0||(rxData[7] & 32) != 0)
 276:Core/Src/main.c **** //       HAL_TIM_Base_Start_IT(&htim2);
 277:Core/Src/main.c **** //     }
 278:Core/Src/main.c **** //   UART_Start_Flag = 1;
 279:Core/Src/main.c **** // }
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
  30              		.loc 1 281 60 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 281 60 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 282:Core/Src/main.c ****       if((rxData[1] & 2) != 0||(rxData[1] & 8) != 0){
  39              		.loc 1 282 7 is_stmt 1 view .LVU2
  40              		.loc 1 282 17 is_stmt 0 view .LVU3
  41 0002 114B     		ldr	r3, .L9
  42 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  43              		.loc 1 282 9 view .LVU4
  44 0006 13F00A0F 		tst	r3, #10
  45 000a 0AD1     		bne	.L6
  46              	.LVL1:
  47              	.L2:
 283:Core/Src/main.c ****         HAL_GPIO_TogglePin(RINDIC_GPIO_Port, RINDIC_Pin);
 284:Core/Src/main.c ****       } 
 285:Core/Src/main.c ****       if((rxData[1] & 4) != 0||(rxData[1] & 8) != 0){
  48              		.loc 1 285 7 is_stmt 1 view .LVU5
  49              		.loc 1 285 17 is_stmt 0 view .LVU6
  50 000c 0E4B     		ldr	r3, .L9
  51 000e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  52              		.loc 1 285 9 view .LVU7
  53 0010 13F00C0F 		tst	r3, #12
  54 0014 0CD1     		bne	.L7
  55              	.L3:
 286:Core/Src/main.c ****         HAL_GPIO_TogglePin(LINDIC_GPIO_Port, LINDIC_Pin);
 287:Core/Src/main.c ****       }
 288:Core/Src/main.c ****       if((rxData[1] & 16) != 0){
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 7


  56              		.loc 1 288 7 is_stmt 1 view .LVU8
  57              		.loc 1 288 17 is_stmt 0 view .LVU9
  58 0016 0C4B     		ldr	r3, .L9
  59 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  60              		.loc 1 288 9 view .LVU10
  61 001a 13F0100F 		tst	r3, #16
  62 001e 0ED1     		bne	.L8
  63              	.L1:
 289:Core/Src/main.c ****         HAL_GPIO_TogglePin(SAFELIGHT_GPIO_Port, SAFELIGHT_Pin);
 290:Core/Src/main.c ****       }
 291:Core/Src/main.c **** }
  64              		.loc 1 291 1 view .LVU11
  65 0020 08BD     		pop	{r3, pc}
  66              	.LVL2:
  67              	.L6:
 283:Core/Src/main.c ****       } 
  68              		.loc 1 283 9 is_stmt 1 view .LVU12
  69 0022 4FF40071 		mov	r1, #512
  70 0026 4FF09040 		mov	r0, #1207959552
  71              	.LVL3:
 283:Core/Src/main.c ****       } 
  72              		.loc 1 283 9 is_stmt 0 view .LVU13
  73 002a FFF7FEFF 		bl	HAL_GPIO_TogglePin
  74              	.LVL4:
  75 002e EDE7     		b	.L2
  76              	.L7:
 286:Core/Src/main.c ****         HAL_GPIO_TogglePin(LINDIC_GPIO_Port, LINDIC_Pin);
  77              		.loc 1 286 9 is_stmt 1 view .LVU14
  78 0030 4FF48061 		mov	r1, #1024
  79 0034 4FF09040 		mov	r0, #1207959552
  80 0038 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  81              	.LVL5:
  82 003c EBE7     		b	.L3
  83              	.L8:
 289:Core/Src/main.c ****         HAL_GPIO_TogglePin(SAFELIGHT_GPIO_Port, SAFELIGHT_Pin);
  84              		.loc 1 289 9 view .LVU15
  85 003e 1021     		movs	r1, #16
  86 0040 0248     		ldr	r0, .L9+4
  87 0042 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  88              	.LVL6:
  89              		.loc 1 291 1 is_stmt 0 view .LVU16
  90 0046 EBE7     		b	.L1
  91              	.L10:
  92              		.align	2
  93              	.L9:
  94 0048 00000000 		.word	.LANCHOR0
  95 004c 00040048 		.word	1207960576
  96              		.cfi_endproc
  97              	.LFE127:
  99              		.section	.text.Brake,"ax",%progbits
 100              		.align	1
 101              		.global	Brake
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	Brake:
 107              	.LFB128:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 8


 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** //function to set all of the GPIO pins individually and make other functions more readable
 295:Core/Src/main.c **** void Brake(){
 108              		.loc 1 295 13 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 08B5     		push	{r3, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 3, -8
 115              		.cfi_offset 14, -4
 296:Core/Src/main.c **** HAL_GPIO_WritePin(BRAKE_GPIO_Port, BRAKE_Pin, SET);
 116              		.loc 1 296 1 view .LVU18
 117 0002 0122     		movs	r2, #1
 118 0004 1146     		mov	r1, r2
 119 0006 0248     		ldr	r0, .L13
 120 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL7:
 297:Core/Src/main.c **** }
 122              		.loc 1 297 1 is_stmt 0 view .LVU19
 123 000c 08BD     		pop	{r3, pc}
 124              	.L14:
 125 000e 00BF     		.align	2
 126              	.L13:
 127 0010 00040048 		.word	1207960576
 128              		.cfi_endproc
 129              	.LFE128:
 131              		.section	.text.BrakeR,"ax",%progbits
 132              		.align	1
 133              		.global	BrakeR
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	BrakeR:
 139              	.LFB129:
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** void BrakeR(){
 140              		.loc 1 299 14 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 3, -8
 147              		.cfi_offset 14, -4
 300:Core/Src/main.c **** HAL_GPIO_WritePin(BRAKE_GPIO_Port, BRAKE_Pin, RESET);
 148              		.loc 1 300 1 view .LVU21
 149 0002 0022     		movs	r2, #0
 150 0004 0121     		movs	r1, #1
 151 0006 0248     		ldr	r0, .L17
 152 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL8:
 301:Core/Src/main.c **** }
 154              		.loc 1 301 1 is_stmt 0 view .LVU22
 155 000c 08BD     		pop	{r3, pc}
 156              	.L18:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 9


 157 000e 00BF     		.align	2
 158              	.L17:
 159 0010 00040048 		.word	1207960576
 160              		.cfi_endproc
 161              	.LFE129:
 163              		.section	.text.FogF,"ax",%progbits
 164              		.align	1
 165              		.global	FogF
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	FogF:
 171              	.LFB130:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** void FogF(){
 172              		.loc 1 303 12 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 08B5     		push	{r3, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 304:Core/Src/main.c **** HAL_GPIO_WritePin(FRONTFOG_GPIO_Port, FRONTFOG_Pin, SET);
 180              		.loc 1 304 1 view .LVU24
 181 0002 0122     		movs	r2, #1
 182 0004 4FF48071 		mov	r1, #256
 183 0008 4FF09040 		mov	r0, #1207959552
 184 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 185              	.LVL9:
 305:Core/Src/main.c **** }
 186              		.loc 1 305 1 is_stmt 0 view .LVU25
 187 0010 08BD     		pop	{r3, pc}
 188              		.cfi_endproc
 189              	.LFE130:
 191              		.section	.text.FogFR,"ax",%progbits
 192              		.align	1
 193              		.global	FogFR
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	FogFR:
 199              	.LFB131:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** void FogFR(){
 200              		.loc 1 307 13 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 308:Core/Src/main.c **** HAL_GPIO_WritePin(FRONTFOG_GPIO_Port, FRONTFOG_Pin, RESET);
 208              		.loc 1 308 1 view .LVU27
 209 0002 0022     		movs	r2, #0
 210 0004 4FF48071 		mov	r1, #256
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 10


 211 0008 4FF09040 		mov	r0, #1207959552
 212 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 213              	.LVL10:
 309:Core/Src/main.c **** }
 214              		.loc 1 309 1 is_stmt 0 view .LVU28
 215 0010 08BD     		pop	{r3, pc}
 216              		.cfi_endproc
 217              	.LFE131:
 219              		.section	.text.FogR,"ax",%progbits
 220              		.align	1
 221              		.global	FogR
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	FogR:
 227              	.LFB132:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** void FogR(){
 228              		.loc 1 311 12 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 312:Core/Src/main.c **** HAL_GPIO_WritePin(REARFOG_GPIO_Port, REARFOG_Pin, SET);
 236              		.loc 1 312 1 view .LVU30
 237 0002 0122     		movs	r2, #1
 238 0004 0221     		movs	r1, #2
 239 0006 0248     		ldr	r0, .L25
 240 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL11:
 313:Core/Src/main.c **** }
 242              		.loc 1 313 1 is_stmt 0 view .LVU31
 243 000c 08BD     		pop	{r3, pc}
 244              	.L26:
 245 000e 00BF     		.align	2
 246              	.L25:
 247 0010 00040048 		.word	1207960576
 248              		.cfi_endproc
 249              	.LFE132:
 251              		.section	.text.FogRR,"ax",%progbits
 252              		.align	1
 253              		.global	FogRR
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	FogRR:
 259              	.LFB133:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** void FogRR(){
 260              		.loc 1 315 13 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 11


 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
 267              		.cfi_offset 14, -4
 316:Core/Src/main.c **** HAL_GPIO_WritePin(REARFOG_GPIO_Port, REARFOG_Pin, RESET);
 268              		.loc 1 316 1 view .LVU33
 269 0002 0022     		movs	r2, #0
 270 0004 0221     		movs	r1, #2
 271 0006 0248     		ldr	r0, .L29
 272 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 273              	.LVL12:
 317:Core/Src/main.c **** }
 274              		.loc 1 317 1 is_stmt 0 view .LVU34
 275 000c 08BD     		pop	{r3, pc}
 276              	.L30:
 277 000e 00BF     		.align	2
 278              	.L29:
 279 0010 00040048 		.word	1207960576
 280              		.cfi_endproc
 281              	.LFE133:
 283              		.section	.text.Day,"ax",%progbits
 284              		.align	1
 285              		.global	Day
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	Day:
 291              	.LFB134:
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** void Day(){
 292              		.loc 1 319 11 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 3, -8
 299              		.cfi_offset 14, -4
 320:Core/Src/main.c **** HAL_GPIO_WritePin(FRONTDAY_GPIO_Port, FRONTDAY_Pin, SET);
 300              		.loc 1 320 1 view .LVU36
 301 0002 0122     		movs	r2, #1
 302 0004 0221     		movs	r1, #2
 303 0006 4FF09040 		mov	r0, #1207959552
 304 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 305              	.LVL13:
 321:Core/Src/main.c **** }
 306              		.loc 1 321 1 is_stmt 0 view .LVU37
 307 000e 08BD     		pop	{r3, pc}
 308              		.cfi_endproc
 309              	.LFE134:
 311              		.section	.text.DayR,"ax",%progbits
 312              		.align	1
 313              		.global	DayR
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	DayR:
 319              	.LFB135:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 12


 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** void DayR(){
 320              		.loc 1 323 12 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 324:Core/Src/main.c **** HAL_GPIO_WritePin(FRONTDAY_GPIO_Port, FRONTDAY_Pin, RESET);
 328              		.loc 1 324 1 view .LVU39
 329 0002 0022     		movs	r2, #0
 330 0004 0221     		movs	r1, #2
 331 0006 4FF09040 		mov	r0, #1207959552
 332 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 333              	.LVL14:
 325:Core/Src/main.c **** }
 334              		.loc 1 325 1 is_stmt 0 view .LVU40
 335 000e 08BD     		pop	{r3, pc}
 336              		.cfi_endproc
 337              	.LFE135:
 339              		.section	.text.RearPos,"ax",%progbits
 340              		.align	1
 341              		.global	RearPos
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	RearPos:
 347              	.LFB136:
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** void RearPos(){
 348              		.loc 1 327 15 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 328:Core/Src/main.c ****   HAL_GPIO_WritePin(REARPOS_GPIO_Port, REARPOS_Pin, SET);
 356              		.loc 1 328 3 view .LVU42
 357 0002 0122     		movs	r2, #1
 358 0004 8021     		movs	r1, #128
 359 0006 0248     		ldr	r0, .L37
 360 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 361              	.LVL15:
 329:Core/Src/main.c **** }
 362              		.loc 1 329 1 is_stmt 0 view .LVU43
 363 000c 08BD     		pop	{r3, pc}
 364              	.L38:
 365 000e 00BF     		.align	2
 366              	.L37:
 367 0010 00040048 		.word	1207960576
 368              		.cfi_endproc
 369              	.LFE136:
 371              		.section	.text.RearPosR,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 13


 372              		.align	1
 373              		.global	RearPosR
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	RearPosR:
 379              	.LFB137:
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** void RearPosR(){
 380              		.loc 1 331 16 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 332:Core/Src/main.c ****   HAL_GPIO_WritePin(REARPOS_GPIO_Port, REARPOS_Pin, RESET);
 388              		.loc 1 332 3 view .LVU45
 389 0002 0022     		movs	r2, #0
 390 0004 8021     		movs	r1, #128
 391 0006 0248     		ldr	r0, .L41
 392 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 393              	.LVL16:
 333:Core/Src/main.c **** }
 394              		.loc 1 333 1 is_stmt 0 view .LVU46
 395 000c 08BD     		pop	{r3, pc}
 396              	.L42:
 397 000e 00BF     		.align	2
 398              	.L41:
 399 0010 00040048 		.word	1207960576
 400              		.cfi_endproc
 401              	.LFE137:
 403              		.section	.text.Horn,"ax",%progbits
 404              		.align	1
 405              		.global	Horn
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	Horn:
 411              	.LFB138:
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** void Horn(){
 412              		.loc 1 335 12 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
 419              		.cfi_offset 14, -4
 336:Core/Src/main.c ****   HAL_GPIO_WritePin(HORN_GPIO_Port, HORN_Pin, SET);
 420              		.loc 1 336 3 view .LVU48
 421 0002 0122     		movs	r2, #1
 422 0004 2021     		movs	r1, #32
 423 0006 0248     		ldr	r0, .L45
 424 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 14


 425              	.LVL17:
 337:Core/Src/main.c **** }
 426              		.loc 1 337 1 is_stmt 0 view .LVU49
 427 000c 08BD     		pop	{r3, pc}
 428              	.L46:
 429 000e 00BF     		.align	2
 430              	.L45:
 431 0010 00040048 		.word	1207960576
 432              		.cfi_endproc
 433              	.LFE138:
 435              		.section	.text.HornR,"ax",%progbits
 436              		.align	1
 437              		.global	HornR
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 442              	HornR:
 443              	.LFB139:
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** void HornR(){
 444              		.loc 1 339 13 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 08B5     		push	{r3, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 3, -8
 451              		.cfi_offset 14, -4
 340:Core/Src/main.c ****   HAL_GPIO_WritePin(HORN_GPIO_Port, HORN_Pin, RESET);
 452              		.loc 1 340 3 view .LVU51
 453 0002 0022     		movs	r2, #0
 454 0004 2021     		movs	r1, #32
 455 0006 0248     		ldr	r0, .L49
 456 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 457              	.LVL18:
 341:Core/Src/main.c **** }
 458              		.loc 1 341 1 is_stmt 0 view .LVU52
 459 000c 08BD     		pop	{r3, pc}
 460              	.L50:
 461 000e 00BF     		.align	2
 462              	.L49:
 463 0010 00040048 		.word	1207960576
 464              		.cfi_endproc
 465              	.LFE139:
 467              		.section	.text.Reverse,"ax",%progbits
 468              		.align	1
 469              		.global	Reverse
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 474              	Reverse:
 475              	.LFB140:
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** void Reverse(){
 476              		.loc 1 343 15 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 15


 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480 0000 08B5     		push	{r3, lr}
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 3, -8
 483              		.cfi_offset 14, -4
 344:Core/Src/main.c ****   HAL_GPIO_WritePin(REVERSE_GPIO_Port, REVERSE_Pin, SET);
 484              		.loc 1 344 3 view .LVU54
 485 0002 0122     		movs	r2, #1
 486 0004 4021     		movs	r1, #64
 487 0006 0248     		ldr	r0, .L53
 488 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 489              	.LVL19:
 345:Core/Src/main.c **** }
 490              		.loc 1 345 1 is_stmt 0 view .LVU55
 491 000c 08BD     		pop	{r3, pc}
 492              	.L54:
 493 000e 00BF     		.align	2
 494              	.L53:
 495 0010 00040048 		.word	1207960576
 496              		.cfi_endproc
 497              	.LFE140:
 499              		.section	.text.ReverseR,"ax",%progbits
 500              		.align	1
 501              		.global	ReverseR
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	ReverseR:
 507              	.LFB141:
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** void ReverseR(){
 508              		.loc 1 347 16 is_stmt 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512 0000 08B5     		push	{r3, lr}
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 3, -8
 515              		.cfi_offset 14, -4
 348:Core/Src/main.c ****   HAL_GPIO_WritePin(REVERSE_GPIO_Port, REVERSE_Pin, RESET);
 516              		.loc 1 348 3 view .LVU57
 517 0002 0022     		movs	r2, #0
 518 0004 4021     		movs	r1, #64
 519 0006 0248     		ldr	r0, .L57
 520 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 521              	.LVL20:
 349:Core/Src/main.c **** }
 522              		.loc 1 349 1 is_stmt 0 view .LVU58
 523 000c 08BD     		pop	{r3, pc}
 524              	.L58:
 525 000e 00BF     		.align	2
 526              	.L57:
 527 0010 00040048 		.word	1207960576
 528              		.cfi_endproc
 529              	.LFE141:
 531              		.section	.text.FrontFull,"ax",%progbits
 532              		.align	1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 16


 533              		.global	FrontFull
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	FrontFull:
 539              	.LFB142:
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** void FrontFull(){
 540              		.loc 1 351 17 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 08B5     		push	{r3, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 3, -8
 547              		.cfi_offset 14, -4
 352:Core/Src/main.c ****   HAL_GPIO_WritePin(FRONTFULL_GPIO_Port, FRONTFULL_Pin, SET);
 548              		.loc 1 352 3 view .LVU60
 549 0002 0122     		movs	r2, #1
 550 0004 0821     		movs	r1, #8
 551 0006 0248     		ldr	r0, .L61
 552 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 553              	.LVL21:
 353:Core/Src/main.c **** }
 554              		.loc 1 353 1 is_stmt 0 view .LVU61
 555 000c 08BD     		pop	{r3, pc}
 556              	.L62:
 557 000e 00BF     		.align	2
 558              	.L61:
 559 0010 00040048 		.word	1207960576
 560              		.cfi_endproc
 561              	.LFE142:
 563              		.section	.text.FrontFullR,"ax",%progbits
 564              		.align	1
 565              		.global	FrontFullR
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	FrontFullR:
 571              	.LFB143:
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** void FrontFullR(){
 572              		.loc 1 355 18 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 08B5     		push	{r3, lr}
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 3, -8
 579              		.cfi_offset 14, -4
 356:Core/Src/main.c ****   HAL_GPIO_WritePin(FRONTFULL_GPIO_Port, FRONTFULL_Pin, RESET);
 580              		.loc 1 356 3 view .LVU63
 581 0002 0022     		movs	r2, #0
 582 0004 0821     		movs	r1, #8
 583 0006 0248     		ldr	r0, .L65
 584 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 585              	.LVL22:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 17


 357:Core/Src/main.c **** }
 586              		.loc 1 357 1 is_stmt 0 view .LVU64
 587 000c 08BD     		pop	{r3, pc}
 588              	.L66:
 589 000e 00BF     		.align	2
 590              	.L65:
 591 0010 00040048 		.word	1207960576
 592              		.cfi_endproc
 593              	.LFE143:
 595              		.section	.text.FrontHigh,"ax",%progbits
 596              		.align	1
 597              		.global	FrontHigh
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 602              	FrontHigh:
 603              	.LFB144:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** void FrontHigh(){
 604              		.loc 1 359 17 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608 0000 08B5     		push	{r3, lr}
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 3, -8
 611              		.cfi_offset 14, -4
 360:Core/Src/main.c ****   HAL_GPIO_WritePin(FRONTHIGH_GPIO_Port, FRONTHIGH_Pin, SET);
 612              		.loc 1 360 3 view .LVU66
 613 0002 0122     		movs	r2, #1
 614 0004 1146     		mov	r1, r2
 615 0006 4FF09040 		mov	r0, #1207959552
 616 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 617              	.LVL23:
 361:Core/Src/main.c **** }
 618              		.loc 1 361 1 is_stmt 0 view .LVU67
 619 000e 08BD     		pop	{r3, pc}
 620              		.cfi_endproc
 621              	.LFE144:
 623              		.section	.text.FrontHighR,"ax",%progbits
 624              		.align	1
 625              		.global	FrontHighR
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 630              	FrontHighR:
 631              	.LFB145:
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** void FrontHighR(){
 632              		.loc 1 363 18 is_stmt 1 view -0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636 0000 08B5     		push	{r3, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 3, -8
 639              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 18


 364:Core/Src/main.c ****   HAL_GPIO_WritePin(FRONTHIGH_GPIO_Port, FRONTHIGH_Pin, RESET);
 640              		.loc 1 364 3 view .LVU69
 641 0002 0022     		movs	r2, #0
 642 0004 0121     		movs	r1, #1
 643 0006 4FF09040 		mov	r0, #1207959552
 644 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 645              	.LVL24:
 365:Core/Src/main.c **** }
 646              		.loc 1 365 1 is_stmt 0 view .LVU70
 647 000e 08BD     		pop	{r3, pc}
 648              		.cfi_endproc
 649              	.LFE145:
 651              		.section	.text.FullIOReset,"ax",%progbits
 652              		.align	1
 653              		.global	FullIOReset
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 658              	FullIOReset:
 659              	.LFB146:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** void FullIOReset(){                       //function to fully reset all GPIO pins used for the ligh
 660              		.loc 1 368 19 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664 0000 08B5     		push	{r3, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 3, -8
 667              		.cfi_offset 14, -4
 369:Core/Src/main.c ****   DayR();
 668              		.loc 1 369 3 view .LVU72
 669 0002 FFF7FEFF 		bl	DayR
 670              	.LVL25:
 370:Core/Src/main.c ****   FogRR();
 671              		.loc 1 370 3 view .LVU73
 672 0006 FFF7FEFF 		bl	FogRR
 673              	.LVL26:
 371:Core/Src/main.c ****   FogFR();
 674              		.loc 1 371 3 view .LVU74
 675 000a FFF7FEFF 		bl	FogFR
 676              	.LVL27:
 372:Core/Src/main.c ****   BrakeR();
 677              		.loc 1 372 3 view .LVU75
 678 000e FFF7FEFF 		bl	BrakeR
 679              	.LVL28:
 373:Core/Src/main.c ****   FrontHighR();
 680              		.loc 1 373 3 view .LVU76
 681 0012 FFF7FEFF 		bl	FrontHighR
 682              	.LVL29:
 374:Core/Src/main.c ****   FrontFullR();
 683              		.loc 1 374 3 view .LVU77
 684 0016 FFF7FEFF 		bl	FrontFullR
 685              	.LVL30:
 375:Core/Src/main.c ****   ReverseR();
 686              		.loc 1 375 3 view .LVU78
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 19


 687 001a FFF7FEFF 		bl	ReverseR
 688              	.LVL31:
 376:Core/Src/main.c ****   HornR();
 689              		.loc 1 376 3 view .LVU79
 690 001e FFF7FEFF 		bl	HornR
 691              	.LVL32:
 377:Core/Src/main.c ****   RearPosR();
 692              		.loc 1 377 3 view .LVU80
 693 0022 FFF7FEFF 		bl	RearPosR
 694              	.LVL33:
 378:Core/Src/main.c ****   HAL_TIM_Base_Stop_IT(&htim2);
 695              		.loc 1 378 3 view .LVU81
 696 0026 0B48     		ldr	r0, .L73
 697 0028 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 698              	.LVL34:
 379:Core/Src/main.c ****   HAL_GPIO_WritePin(SAFELIGHT_GPIO_Port,SAFELIGHT_Pin, RESET);
 699              		.loc 1 379 3 view .LVU82
 700 002c 0022     		movs	r2, #0
 701 002e 1021     		movs	r1, #16
 702 0030 0948     		ldr	r0, .L73+4
 703 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 704              	.LVL35:
 380:Core/Src/main.c ****   HAL_GPIO_WritePin(RINDIC_GPIO_Port, RINDIC_Pin, RESET);
 705              		.loc 1 380 3 view .LVU83
 706 0036 0022     		movs	r2, #0
 707 0038 4FF40071 		mov	r1, #512
 708 003c 4FF09040 		mov	r0, #1207959552
 709 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 710              	.LVL36:
 381:Core/Src/main.c ****   HAL_GPIO_WritePin(LINDIC_GPIO_Port, LINDIC_Pin, RESET);
 711              		.loc 1 381 3 view .LVU84
 712 0044 0022     		movs	r2, #0
 713 0046 4FF48061 		mov	r1, #1024
 714 004a 4FF09040 		mov	r0, #1207959552
 715 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 716              	.LVL37:
 382:Core/Src/main.c **** }
 717              		.loc 1 382 1 is_stmt 0 view .LVU85
 718 0052 08BD     		pop	{r3, pc}
 719              	.L74:
 720              		.align	2
 721              	.L73:
 722 0054 00000000 		.word	htim2
 723 0058 00040048 		.word	1207960576
 724              		.cfi_endproc
 725              	.LFE146:
 727              		.section	.text.LightsRefresh,"ax",%progbits
 728              		.align	1
 729              		.global	LightsRefresh
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 734              	LightsRefresh:
 735              	.LVL38:
 736              	.LFB126:
 211:Core/Src/main.c ****   FullIOReset();
 737              		.loc 1 211 37 is_stmt 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 20


 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 211:Core/Src/main.c ****   FullIOReset();
 741              		.loc 1 211 37 is_stmt 0 view .LVU87
 742 0000 10B5     		push	{r4, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
 746 0002 0446     		mov	r4, r0
 212:Core/Src/main.c ****   if((rxData[0] & 1) != 0){           //[Brake, FogF, FogR, Day, RearPos, Reverse, FrontFull, Front
 747              		.loc 1 212 3 is_stmt 1 view .LVU88
 748 0004 FFF7FEFF 		bl	FullIOReset
 749              	.LVL39:
 213:Core/Src/main.c ****     Brake();
 750              		.loc 1 213 3 view .LVU89
 213:Core/Src/main.c ****     Brake();
 751              		.loc 1 213 13 is_stmt 0 view .LVU90
 752 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 213:Core/Src/main.c ****     Brake();
 753              		.loc 1 213 5 view .LVU91
 754 000a 13F0010F 		tst	r3, #1
 755 000e 2FD1     		bne	.L88
 756              	.L76:
 216:Core/Src/main.c ****     FogF();
 757              		.loc 1 216 3 is_stmt 1 view .LVU92
 216:Core/Src/main.c ****     FogF();
 758              		.loc 1 216 13 is_stmt 0 view .LVU93
 759 0010 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 216:Core/Src/main.c ****     FogF();
 760              		.loc 1 216 5 view .LVU94
 761 0012 13F0020F 		tst	r3, #2
 762 0016 2ED1     		bne	.L89
 763              	.L77:
 219:Core/Src/main.c ****     FogR();
 764              		.loc 1 219 3 is_stmt 1 view .LVU95
 219:Core/Src/main.c ****     FogR();
 765              		.loc 1 219 13 is_stmt 0 view .LVU96
 766 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 219:Core/Src/main.c ****     FogR();
 767              		.loc 1 219 5 view .LVU97
 768 001a 13F0040F 		tst	r3, #4
 769 001e 2DD1     		bne	.L90
 770              	.L78:
 222:Core/Src/main.c ****     Day();
 771              		.loc 1 222 3 is_stmt 1 view .LVU98
 222:Core/Src/main.c ****     Day();
 772              		.loc 1 222 13 is_stmt 0 view .LVU99
 773 0020 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 222:Core/Src/main.c ****     Day();
 774              		.loc 1 222 5 view .LVU100
 775 0022 13F0080F 		tst	r3, #8
 776 0026 2CD1     		bne	.L91
 777              	.L79:
 225:Core/Src/main.c ****     RearPos();
 778              		.loc 1 225 3 is_stmt 1 view .LVU101
 225:Core/Src/main.c ****     RearPos();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 21


 779              		.loc 1 225 13 is_stmt 0 view .LVU102
 780 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 225:Core/Src/main.c ****     RearPos();
 781              		.loc 1 225 5 view .LVU103
 782 002a 13F0100F 		tst	r3, #16
 783 002e 2BD1     		bne	.L92
 784              	.L80:
 228:Core/Src/main.c ****     Reverse();
 785              		.loc 1 228 3 is_stmt 1 view .LVU104
 228:Core/Src/main.c ****     Reverse();
 786              		.loc 1 228 13 is_stmt 0 view .LVU105
 787 0030 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 228:Core/Src/main.c ****     Reverse();
 788              		.loc 1 228 5 view .LVU106
 789 0032 13F0200F 		tst	r3, #32
 790 0036 2AD1     		bne	.L93
 791              	.L81:
 231:Core/Src/main.c ****     FrontFull();
 792              		.loc 1 231 3 is_stmt 1 view .LVU107
 231:Core/Src/main.c ****     FrontFull();
 793              		.loc 1 231 13 is_stmt 0 view .LVU108
 794 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 231:Core/Src/main.c ****     FrontFull();
 795              		.loc 1 231 5 view .LVU109
 796 003a 13F0400F 		tst	r3, #64
 797 003e 29D1     		bne	.L94
 798              	.L82:
 234:Core/Src/main.c ****     FrontHigh();
 799              		.loc 1 234 3 is_stmt 1 view .LVU110
 234:Core/Src/main.c ****     FrontHigh();
 800              		.loc 1 234 24 is_stmt 0 view .LVU111
 801 0040 94F90030 		ldrsb	r3, [r4]
 234:Core/Src/main.c ****     FrontHigh();
 802              		.loc 1 234 5 view .LVU112
 803 0044 002B     		cmp	r3, #0
 804 0046 28DB     		blt	.L95
 805              	.L83:
 237:Core/Src/main.c ****     Horn();
 806              		.loc 1 237 3 is_stmt 1 view .LVU113
 237:Core/Src/main.c ****     Horn();
 807              		.loc 1 237 13 is_stmt 0 view .LVU114
 808 0048 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 237:Core/Src/main.c ****     Horn();
 809              		.loc 1 237 5 view .LVU115
 810 004a 13F0010F 		tst	r3, #1
 811 004e 27D1     		bne	.L96
 812              	.L84:
 240:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 813              		.loc 1 240 3 is_stmt 1 view .LVU116
 240:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 814              		.loc 1 240 13 is_stmt 0 view .LVU117
 815 0050 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 240:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 816              		.loc 1 240 5 view .LVU118
 817 0052 13F0060F 		tst	r3, #6
 818 0056 07D1     		bne	.L85
 240:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 22


 819              		.loc 1 240 57 discriminator 1 view .LVU119
 820 0058 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 240:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 821              		.loc 1 240 48 discriminator 1 view .LVU120
 822 005a 13F0100F 		tst	r3, #16
 823 005e 03D1     		bne	.L85
 240:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 824              		.loc 1 240 80 discriminator 2 view .LVU121
 825 0060 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 240:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 826              		.loc 1 240 71 discriminator 2 view .LVU122
 827 0062 13F0200F 		tst	r3, #32
 828 0066 02D0     		beq	.L75
 829              	.L85:
 241:Core/Src/main.c ****   }
 830              		.loc 1 241 5 is_stmt 1 view .LVU123
 831 0068 0F48     		ldr	r0, .L97
 832 006a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 833              	.LVL40:
 834              	.L75:
 243:Core/Src/main.c **** //repeat above for UART interrupts for bench testing without proper CAN system and knowledge of dat
 835              		.loc 1 243 3 is_stmt 0 view .LVU124
 836 006e 10BD     		pop	{r4, pc}
 837              	.LVL41:
 838              	.L88:
 214:Core/Src/main.c ****   }
 839              		.loc 1 214 5 is_stmt 1 view .LVU125
 840 0070 FFF7FEFF 		bl	Brake
 841              	.LVL42:
 842 0074 CCE7     		b	.L76
 843              	.L89:
 217:Core/Src/main.c ****   }
 844              		.loc 1 217 5 view .LVU126
 845 0076 FFF7FEFF 		bl	FogF
 846              	.LVL43:
 847 007a CDE7     		b	.L77
 848              	.L90:
 220:Core/Src/main.c ****   }
 849              		.loc 1 220 5 view .LVU127
 850 007c FFF7FEFF 		bl	FogR
 851              	.LVL44:
 852 0080 CEE7     		b	.L78
 853              	.L91:
 223:Core/Src/main.c ****   }
 854              		.loc 1 223 5 view .LVU128
 855 0082 FFF7FEFF 		bl	Day
 856              	.LVL45:
 857 0086 CFE7     		b	.L79
 858              	.L92:
 226:Core/Src/main.c ****   }
 859              		.loc 1 226 5 view .LVU129
 860 0088 FFF7FEFF 		bl	RearPos
 861              	.LVL46:
 862 008c D0E7     		b	.L80
 863              	.L93:
 229:Core/Src/main.c ****   }
 864              		.loc 1 229 5 view .LVU130
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 23


 865 008e FFF7FEFF 		bl	Reverse
 866              	.LVL47:
 867 0092 D1E7     		b	.L81
 868              	.L94:
 232:Core/Src/main.c ****   }
 869              		.loc 1 232 5 view .LVU131
 870 0094 FFF7FEFF 		bl	FrontFull
 871              	.LVL48:
 872 0098 D2E7     		b	.L82
 873              	.L95:
 235:Core/Src/main.c ****   }
 874              		.loc 1 235 5 view .LVU132
 875 009a FFF7FEFF 		bl	FrontHigh
 876              	.LVL49:
 877 009e D3E7     		b	.L83
 878              	.L96:
 238:Core/Src/main.c ****   }
 879              		.loc 1 238 5 view .LVU133
 880 00a0 FFF7FEFF 		bl	Horn
 881              	.LVL50:
 882 00a4 D4E7     		b	.L84
 883              	.L98:
 884 00a6 00BF     		.align	2
 885              	.L97:
 886 00a8 00000000 		.word	htim2
 887              		.cfi_endproc
 888              	.LFE126:
 890              		.section	.text.Error_Handler,"ax",%progbits
 891              		.align	1
 892              		.global	Error_Handler
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 897              	Error_Handler:
 898              	.LFB148:
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** void heartbeat(){
 385:Core/Src/main.c ****   if (HAL_CAN_AddTxMessage(&hcan, &txHeader, txData, &canTxMailbox) != HAL_OK){
 386:Core/Src/main.c ****     Error_Handler();
 387:Core/Src/main.c ****   }
 388:Core/Src/main.c ****   HAL_Delay(1000);
 389:Core/Src/main.c **** }
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** // void uartHeartbeat(){
 392:Core/Src/main.c **** //   if(HAL_UART_Transmit(&huart2, &txData[0], 1, 100) != HAL_OK){
 393:Core/Src/main.c **** //     Error_Handler();
 394:Core/Src/main.c **** //   }
 395:Core/Src/main.c **** //   HAL_Delay(250);
 396:Core/Src/main.c **** // }
 397:Core/Src/main.c **** /* USER CODE END 4 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** /**
 400:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 401:Core/Src/main.c ****   * @retval None
 402:Core/Src/main.c ****   */
 403:Core/Src/main.c **** void Error_Handler(void)
 404:Core/Src/main.c **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 24


 899              		.loc 1 404 1 view -0
 900              		.cfi_startproc
 901              		@ Volatile: function does not return.
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 405:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 406:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 407:Core/Src/main.c ****   __disable_irq();
 905              		.loc 1 407 3 view .LVU135
 906              	.LBB4:
 907              	.LBI4:
 908              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 25


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 26


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 909              		.loc 2 140 27 view .LVU136
 910              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 911              		.loc 2 142 3 view .LVU137
 912              		.syntax unified
 913              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 914 0000 72B6     		cpsid i
 915              	@ 0 "" 2
 916              		.thumb
 917              		.syntax unified
 918              	.L100:
 919              	.LBE5:
 920              	.LBE4:
 408:Core/Src/main.c ****   while (1)
 921              		.loc 1 408 3 discriminator 1 view .LVU138
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****   }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 27


 922              		.loc 1 410 3 discriminator 1 view .LVU139
 408:Core/Src/main.c ****   while (1)
 923              		.loc 1 408 9 discriminator 1 view .LVU140
 924 0002 FEE7     		b	.L100
 925              		.cfi_endproc
 926              	.LFE148:
 928              		.section	.text.SystemClock_Config,"ax",%progbits
 929              		.align	1
 930              		.global	SystemClock_Config
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 935              	SystemClock_Config:
 936              	.LFB124:
 168:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 937              		.loc 1 168 1 view -0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 64
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941 0000 00B5     		push	{lr}
 942              		.cfi_def_cfa_offset 4
 943              		.cfi_offset 14, -4
 944 0002 91B0     		sub	sp, sp, #68
 945              		.cfi_def_cfa_offset 72
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 946              		.loc 1 169 3 view .LVU142
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 947              		.loc 1 169 22 is_stmt 0 view .LVU143
 948 0004 2822     		movs	r2, #40
 949 0006 0021     		movs	r1, #0
 950 0008 06A8     		add	r0, sp, #24
 951 000a FFF7FEFF 		bl	memset
 952              	.LVL51:
 170:Core/Src/main.c **** 
 953              		.loc 1 170 3 is_stmt 1 view .LVU144
 170:Core/Src/main.c **** 
 954              		.loc 1 170 22 is_stmt 0 view .LVU145
 955 000e 0023     		movs	r3, #0
 956 0010 0193     		str	r3, [sp, #4]
 957 0012 0293     		str	r3, [sp, #8]
 958 0014 0393     		str	r3, [sp, #12]
 959 0016 0493     		str	r3, [sp, #16]
 960 0018 0593     		str	r3, [sp, #20]
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 961              		.loc 1 175 3 is_stmt 1 view .LVU146
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 962              		.loc 1 175 36 is_stmt 0 view .LVU147
 963 001a 0122     		movs	r2, #1
 964 001c 0692     		str	r2, [sp, #24]
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 965              		.loc 1 176 3 is_stmt 1 view .LVU148
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 966              		.loc 1 176 30 is_stmt 0 view .LVU149
 967 001e 4FF48033 		mov	r3, #65536
 968 0022 0793     		str	r3, [sp, #28]
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 969              		.loc 1 177 3 is_stmt 1 view .LVU150
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 28


 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 970              		.loc 1 178 3 view .LVU151
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 971              		.loc 1 178 30 is_stmt 0 view .LVU152
 972 0024 0A92     		str	r2, [sp, #40]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 973              		.loc 1 179 3 is_stmt 1 view .LVU153
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 974              		.loc 1 179 34 is_stmt 0 view .LVU154
 975 0026 0222     		movs	r2, #2
 976 0028 0D92     		str	r2, [sp, #52]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 977              		.loc 1 180 3 is_stmt 1 view .LVU155
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 978              		.loc 1 180 35 is_stmt 0 view .LVU156
 979 002a 0E93     		str	r3, [sp, #56]
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 980              		.loc 1 181 3 is_stmt 1 view .LVU157
 182:Core/Src/main.c ****   {
 981              		.loc 1 182 3 view .LVU158
 182:Core/Src/main.c ****   {
 982              		.loc 1 182 7 is_stmt 0 view .LVU159
 983 002c 06A8     		add	r0, sp, #24
 984 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 985              	.LVL52:
 182:Core/Src/main.c ****   {
 986              		.loc 1 182 6 view .LVU160
 987 0032 70B9     		cbnz	r0, .L105
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 988              		.loc 1 189 3 is_stmt 1 view .LVU161
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 989              		.loc 1 189 31 is_stmt 0 view .LVU162
 990 0034 0F23     		movs	r3, #15
 991 0036 0193     		str	r3, [sp, #4]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 992              		.loc 1 191 3 is_stmt 1 view .LVU163
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 993              		.loc 1 191 34 is_stmt 0 view .LVU164
 994 0038 0223     		movs	r3, #2
 995 003a 0293     		str	r3, [sp, #8]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 996              		.loc 1 192 3 is_stmt 1 view .LVU165
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 997              		.loc 1 192 35 is_stmt 0 view .LVU166
 998 003c 0021     		movs	r1, #0
 999 003e 0391     		str	r1, [sp, #12]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1000              		.loc 1 193 3 is_stmt 1 view .LVU167
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1001              		.loc 1 193 36 is_stmt 0 view .LVU168
 1002 0040 0491     		str	r1, [sp, #16]
 194:Core/Src/main.c **** 
 1003              		.loc 1 194 3 is_stmt 1 view .LVU169
 194:Core/Src/main.c **** 
 1004              		.loc 1 194 36 is_stmt 0 view .LVU170
 1005 0042 0591     		str	r1, [sp, #20]
 196:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 29


 1006              		.loc 1 196 3 is_stmt 1 view .LVU171
 196:Core/Src/main.c ****   {
 1007              		.loc 1 196 7 is_stmt 0 view .LVU172
 1008 0044 01A8     		add	r0, sp, #4
 1009 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1010              	.LVL53:
 196:Core/Src/main.c ****   {
 1011              		.loc 1 196 6 view .LVU173
 1012 004a 20B9     		cbnz	r0, .L106
 200:Core/Src/main.c **** 
 1013              		.loc 1 200 1 view .LVU174
 1014 004c 11B0     		add	sp, sp, #68
 1015              		.cfi_remember_state
 1016              		.cfi_def_cfa_offset 4
 1017              		@ sp needed
 1018 004e 5DF804FB 		ldr	pc, [sp], #4
 1019              	.L105:
 1020              		.cfi_restore_state
 184:Core/Src/main.c ****   }
 1021              		.loc 1 184 5 is_stmt 1 view .LVU175
 1022 0052 FFF7FEFF 		bl	Error_Handler
 1023              	.LVL54:
 1024              	.L106:
 198:Core/Src/main.c ****   }
 1025              		.loc 1 198 5 view .LVU176
 1026 0056 FFF7FEFF 		bl	Error_Handler
 1027              	.LVL55:
 1028              		.cfi_endproc
 1029              	.LFE124:
 1031              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 1032              		.align	1
 1033              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1038              	HAL_CAN_RxFifo0MsgPendingCallback:
 1039              	.LVL56:
 1040              	.LFB125:
 203:Core/Src/main.c ****   if(HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rxHeader, rxData) != HAL_OK){
 1041              		.loc 1 203 64 view -0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 203:Core/Src/main.c ****   if(HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rxHeader, rxData) != HAL_OK){
 1045              		.loc 1 203 64 is_stmt 0 view .LVU178
 1046 0000 10B5     		push	{r4, lr}
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 4, -8
 1049              		.cfi_offset 14, -4
 1050 0002 0446     		mov	r4, r0
 204:Core/Src/main.c ****     Error_Handler();
 1051              		.loc 1 204 3 is_stmt 1 view .LVU179
 204:Core/Src/main.c ****     Error_Handler();
 1052              		.loc 1 204 6 is_stmt 0 view .LVU180
 1053 0004 084B     		ldr	r3, .L113
 1054 0006 094A     		ldr	r2, .L113+4
 1055 0008 0021     		movs	r1, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 30


 1056 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 1057              	.LVL57:
 204:Core/Src/main.c ****     Error_Handler();
 1058              		.loc 1 204 5 view .LVU181
 1059 000e 38B9     		cbnz	r0, .L111
 207:Core/Src/main.c ****     Error_Handler();
 1060              		.loc 1 207 3 is_stmt 1 view .LVU182
 207:Core/Src/main.c ****     Error_Handler();
 1061              		.loc 1 207 6 is_stmt 0 view .LVU183
 1062 0010 074B     		ldr	r3, .L113+8
 1063 0012 054A     		ldr	r2, .L113
 1064 0014 0749     		ldr	r1, .L113+12
 1065 0016 2046     		mov	r0, r4
 1066 0018 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1067              	.LVL58:
 207:Core/Src/main.c ****     Error_Handler();
 1068              		.loc 1 207 5 view .LVU184
 1069 001c 10B9     		cbnz	r0, .L112
 210:Core/Src/main.c **** void LightsRefresh(uint8_t rxData[]){
 1070              		.loc 1 210 1 view .LVU185
 1071 001e 10BD     		pop	{r4, pc}
 1072              	.LVL59:
 1073              	.L111:
 205:Core/Src/main.c ****   }
 1074              		.loc 1 205 5 is_stmt 1 view .LVU186
 1075 0020 FFF7FEFF 		bl	Error_Handler
 1076              	.LVL60:
 1077              	.L112:
 208:Core/Src/main.c ****   }
 1078              		.loc 1 208 5 view .LVU187
 1079 0024 FFF7FEFF 		bl	Error_Handler
 1080              	.LVL61:
 1081              	.L114:
 1082              		.align	2
 1083              	.L113:
 1084 0028 00000000 		.word	.LANCHOR0
 1085 002c 00000000 		.word	.LANCHOR1
 1086 0030 00000000 		.word	.LANCHOR2
 1087 0034 00000000 		.word	.LANCHOR3
 1088              		.cfi_endproc
 1089              	.LFE125:
 1091              		.section	.text.heartbeat,"ax",%progbits
 1092              		.align	1
 1093              		.global	heartbeat
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1098              	heartbeat:
 1099              	.LFB147:
 384:Core/Src/main.c ****   if (HAL_CAN_AddTxMessage(&hcan, &txHeader, txData, &canTxMailbox) != HAL_OK){
 1100              		.loc 1 384 17 view -0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104 0000 08B5     		push	{r3, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 3, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 31


 1107              		.cfi_offset 14, -4
 385:Core/Src/main.c ****     Error_Handler();
 1108              		.loc 1 385 3 view .LVU189
 385:Core/Src/main.c ****     Error_Handler();
 1109              		.loc 1 385 7 is_stmt 0 view .LVU190
 1110 0002 074B     		ldr	r3, .L119
 1111 0004 074A     		ldr	r2, .L119+4
 1112 0006 0849     		ldr	r1, .L119+8
 1113 0008 0848     		ldr	r0, .L119+12
 1114 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1115              	.LVL62:
 385:Core/Src/main.c ****     Error_Handler();
 1116              		.loc 1 385 6 view .LVU191
 1117 000e 20B9     		cbnz	r0, .L118
 388:Core/Src/main.c **** }
 1118              		.loc 1 388 3 is_stmt 1 view .LVU192
 1119 0010 4FF47A70 		mov	r0, #1000
 1120 0014 FFF7FEFF 		bl	HAL_Delay
 1121              	.LVL63:
 389:Core/Src/main.c **** 
 1122              		.loc 1 389 1 is_stmt 0 view .LVU193
 1123 0018 08BD     		pop	{r3, pc}
 1124              	.L118:
 386:Core/Src/main.c ****   }
 1125              		.loc 1 386 5 is_stmt 1 view .LVU194
 1126 001a FFF7FEFF 		bl	Error_Handler
 1127              	.LVL64:
 1128              	.L120:
 1129 001e 00BF     		.align	2
 1130              	.L119:
 1131 0020 00000000 		.word	.LANCHOR2
 1132 0024 00000000 		.word	.LANCHOR4
 1133 0028 00000000 		.word	.LANCHOR3
 1134 002c 00000000 		.word	hcan
 1135              		.cfi_endproc
 1136              	.LFE147:
 1138              		.section	.text.main,"ax",%progbits
 1139              		.align	1
 1140              		.global	main
 1141              		.syntax unified
 1142              		.thumb
 1143              		.thumb_func
 1145              	main:
 1146              	.LFB123:
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1147              		.loc 1 78 1 view -0
 1148              		.cfi_startproc
 1149              		@ Volatile: function does not return.
 1150              		@ args = 0, pretend = 0, frame = 40
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 1152 0000 00B5     		push	{lr}
 1153              		.cfi_def_cfa_offset 4
 1154              		.cfi_offset 14, -4
 1155 0002 8BB0     		sub	sp, sp, #44
 1156              		.cfi_def_cfa_offset 48
  86:Core/Src/main.c **** 
 1157              		.loc 1 86 3 view .LVU196
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 32


 1158 0004 FFF7FEFF 		bl	HAL_Init
 1159              	.LVL65:
  91:Core/Src/main.c ****   canfil.FilterMaskIdHigh = 0;
 1160              		.loc 1 91 3 view .LVU197
  92:Core/Src/main.c ****   canfil.FilterMaskIdLow = 0;
 1161              		.loc 1 92 3 view .LVU198
  92:Core/Src/main.c ****   canfil.FilterMaskIdLow = 0;
 1162              		.loc 1 92 27 is_stmt 0 view .LVU199
 1163 0008 0024     		movs	r4, #0
 1164 000a 0294     		str	r4, [sp, #8]
  93:Core/Src/main.c ****   canfil.FilterIdHigh = 0;
 1165              		.loc 1 93 3 is_stmt 1 view .LVU200
  93:Core/Src/main.c ****   canfil.FilterIdHigh = 0;
 1166              		.loc 1 93 26 is_stmt 0 view .LVU201
 1167 000c 0394     		str	r4, [sp, #12]
  94:Core/Src/main.c ****   canfil.FilterIdLow = 0;
 1168              		.loc 1 94 3 is_stmt 1 view .LVU202
  94:Core/Src/main.c ****   canfil.FilterIdLow = 0;
 1169              		.loc 1 94 23 is_stmt 0 view .LVU203
 1170 000e 0094     		str	r4, [sp]
  95:Core/Src/main.c ****   canfil.FilterBank = 1;
 1171              		.loc 1 95 3 is_stmt 1 view .LVU204
  95:Core/Src/main.c ****   canfil.FilterBank = 1;
 1172              		.loc 1 95 22 is_stmt 0 view .LVU205
 1173 0010 0194     		str	r4, [sp, #4]
  96:Core/Src/main.c ****   canfil.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 1174              		.loc 1 96 3 is_stmt 1 view .LVU206
  96:Core/Src/main.c ****   canfil.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 1175              		.loc 1 96 21 is_stmt 0 view .LVU207
 1176 0012 0123     		movs	r3, #1
 1177 0014 0593     		str	r3, [sp, #20]
  97:Core/Src/main.c ****   canfil.FilterMode = CAN_FILTERMODE_IDMASK;
 1178              		.loc 1 97 3 is_stmt 1 view .LVU208
  97:Core/Src/main.c ****   canfil.FilterMode = CAN_FILTERMODE_IDMASK;
 1179              		.loc 1 97 31 is_stmt 0 view .LVU209
 1180 0016 0494     		str	r4, [sp, #16]
  98:Core/Src/main.c ****   canfil.FilterScale = CAN_FILTERSCALE_16BIT;
 1181              		.loc 1 98 3 is_stmt 1 view .LVU210
  98:Core/Src/main.c ****   canfil.FilterScale = CAN_FILTERSCALE_16BIT;
 1182              		.loc 1 98 21 is_stmt 0 view .LVU211
 1183 0018 0694     		str	r4, [sp, #24]
  99:Core/Src/main.c ****   canfil.FilterActivation = ENABLE;
 1184              		.loc 1 99 3 is_stmt 1 view .LVU212
  99:Core/Src/main.c ****   canfil.FilterActivation = ENABLE;
 1185              		.loc 1 99 22 is_stmt 0 view .LVU213
 1186 001a 0794     		str	r4, [sp, #28]
 100:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan, &canfil);
 1187              		.loc 1 100 3 is_stmt 1 view .LVU214
 100:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan, &canfil);
 1188              		.loc 1 100 27 is_stmt 0 view .LVU215
 1189 001c 0893     		str	r3, [sp, #32]
 101:Core/Src/main.c **** 
 1190              		.loc 1 101 3 is_stmt 1 view .LVU216
 1191 001e 254D     		ldr	r5, .L128
 1192 0020 6946     		mov	r1, sp
 1193 0022 2846     		mov	r0, r5
 1194 0024 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 33


 1195              	.LVL66:
 104:Core/Src/main.c ****   txHeader.IDE = CAN_ID_STD;
 1196              		.loc 1 104 3 view .LVU217
 104:Core/Src/main.c ****   txHeader.IDE = CAN_ID_STD;
 1197              		.loc 1 104 16 is_stmt 0 view .LVU218
 1198 0028 234B     		ldr	r3, .L128+4
 1199 002a 0226     		movs	r6, #2
 1200 002c 1E61     		str	r6, [r3, #16]
 105:Core/Src/main.c ****   txHeader.RTR = CAN_RTR_DATA;
 1201              		.loc 1 105 3 is_stmt 1 view .LVU219
 105:Core/Src/main.c ****   txHeader.RTR = CAN_RTR_DATA;
 1202              		.loc 1 105 16 is_stmt 0 view .LVU220
 1203 002e 9C60     		str	r4, [r3, #8]
 106:Core/Src/main.c ****   txHeader.StdId = 0x400;
 1204              		.loc 1 106 3 is_stmt 1 view .LVU221
 106:Core/Src/main.c ****   txHeader.StdId = 0x400;
 1205              		.loc 1 106 16 is_stmt 0 view .LVU222
 1206 0030 DC60     		str	r4, [r3, #12]
 107:Core/Src/main.c ****   txData[0] = 0x3d;
 1207              		.loc 1 107 3 is_stmt 1 view .LVU223
 107:Core/Src/main.c ****   txData[0] = 0x3d;
 1208              		.loc 1 107 18 is_stmt 0 view .LVU224
 1209 0032 4FF48062 		mov	r2, #1024
 1210 0036 1A60     		str	r2, [r3]
 108:Core/Src/main.c ****   txData[1] = 0x4e;
 1211              		.loc 1 108 3 is_stmt 1 view .LVU225
 108:Core/Src/main.c ****   txData[1] = 0x4e;
 1212              		.loc 1 108 13 is_stmt 0 view .LVU226
 1213 0038 204B     		ldr	r3, .L128+8
 1214 003a 3D22     		movs	r2, #61
 1215 003c 1A70     		strb	r2, [r3]
 109:Core/Src/main.c **** 
 1216              		.loc 1 109 3 is_stmt 1 view .LVU227
 109:Core/Src/main.c **** 
 1217              		.loc 1 109 13 is_stmt 0 view .LVU228
 1218 003e 4E22     		movs	r2, #78
 1219 0040 5A70     		strb	r2, [r3, #1]
 114:Core/Src/main.c **** 
 1220              		.loc 1 114 3 is_stmt 1 view .LVU229
 1221 0042 FFF7FEFF 		bl	SystemClock_Config
 1222              	.LVL67:
 121:Core/Src/main.c ****   MX_CAN_Init();
 1223              		.loc 1 121 3 view .LVU230
 1224 0046 FFF7FEFF 		bl	MX_GPIO_Init
 1225              	.LVL68:
 122:Core/Src/main.c ****   MX_USART2_UART_Init();
 1226              		.loc 1 122 3 view .LVU231
 1227 004a FFF7FEFF 		bl	MX_CAN_Init
 1228              	.LVL69:
 123:Core/Src/main.c ****   MX_TIM2_Init();
 1229              		.loc 1 123 3 view .LVU232
 1230 004e FFF7FEFF 		bl	MX_USART2_UART_Init
 1231              	.LVL70:
 124:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1232              		.loc 1 124 3 view .LVU233
 1233 0052 FFF7FEFF 		bl	MX_TIM2_Init
 1234              	.LVL71:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 34


 127:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 1235              		.loc 1 127 3 view .LVU234
 1236 0056 FFF7FEFF 		bl	FullIOReset
 1237              	.LVL72:
 128:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 1238              		.loc 1 128 3 view .LVU235
 1239 005a 3146     		mov	r1, r6
 1240 005c 2846     		mov	r0, r5
 1241 005e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 1242              	.LVL73:
 129:Core/Src/main.c ****  
 1243              		.loc 1 129 3 view .LVU236
 1244 0062 2846     		mov	r0, r5
 1245 0064 FFF7FEFF 		bl	HAL_CAN_Start
 1246              	.LVL74:
 1247 0068 1DE0     		b	.L125
 1248              	.L123:
 146:Core/Src/main.c ****     }
 1249              		.loc 1 146 5 discriminator 3 view .LVU237
 1250 006a FFF7FEFF 		bl	heartbeat
 1251              	.LVL75:
 145:Core/Src/main.c ****     heartbeat();
 1252              		.loc 1 145 19 discriminator 3 view .LVU238
 1253 006e 144A     		ldr	r2, .L128+12
 1254 0070 1368     		ldr	r3, [r2]
 1255 0072 0133     		adds	r3, r3, #1
 1256 0074 1360     		str	r3, [r2]
 1257              	.L122:
 145:Core/Src/main.c ****     heartbeat();
 1258              		.loc 1 145 14 discriminator 1 view .LVU239
 1259 0076 124B     		ldr	r3, .L128+12
 1260 0078 1B68     		ldr	r3, [r3]
 1261 007a 052B     		cmp	r3, #5
 1262 007c F5DD     		ble	.L123
 148:Core/Src/main.c ****     txHeader.StdId = 0x34F;
 1263              		.loc 1 148 5 view .LVU240
 148:Core/Src/main.c ****     txHeader.StdId = 0x34F;
 1264              		.loc 1 148 18 is_stmt 0 view .LVU241
 1265 007e 0E49     		ldr	r1, .L128+4
 1266 0080 0123     		movs	r3, #1
 1267 0082 0B61     		str	r3, [r1, #16]
 149:Core/Src/main.c ****     txData[1]=0;
 1268              		.loc 1 149 5 is_stmt 1 view .LVU242
 149:Core/Src/main.c ****     txData[1]=0;
 1269              		.loc 1 149 20 is_stmt 0 view .LVU243
 1270 0084 40F24F33 		movw	r3, #847
 1271 0088 0B60     		str	r3, [r1]
 150:Core/Src/main.c ****     txData[0]=0xff;
 1272              		.loc 1 150 5 is_stmt 1 view .LVU244
 150:Core/Src/main.c ****     txData[0]=0xff;
 1273              		.loc 1 150 14 is_stmt 0 view .LVU245
 1274 008a 0C4A     		ldr	r2, .L128+8
 1275 008c 0023     		movs	r3, #0
 1276 008e 5370     		strb	r3, [r2, #1]
 151:Core/Src/main.c ****     if(HAL_CAN_AddTxMessage(&hcan, &txHeader, txData, &canTxMailbox) != HAL_OK){
 1277              		.loc 1 151 5 is_stmt 1 view .LVU246
 151:Core/Src/main.c ****     if(HAL_CAN_AddTxMessage(&hcan, &txHeader, txData, &canTxMailbox) != HAL_OK){
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 35


 1278              		.loc 1 151 14 is_stmt 0 view .LVU247
 1279 0090 FF23     		movs	r3, #255
 1280 0092 1370     		strb	r3, [r2]
 152:Core/Src/main.c ****       Error_Handler();
 1281              		.loc 1 152 5 is_stmt 1 view .LVU248
 152:Core/Src/main.c ****       Error_Handler();
 1282              		.loc 1 152 8 is_stmt 0 view .LVU249
 1283 0094 0B4B     		ldr	r3, .L128+16
 1284 0096 0748     		ldr	r0, .L128
 1285 0098 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1286              	.LVL76:
 152:Core/Src/main.c ****       Error_Handler();
 1287              		.loc 1 152 7 view .LVU250
 1288 009c 38B9     		cbnz	r0, .L127
 155:Core/Src/main.c ****     /* USER CODE END WHILE */
 1289              		.loc 1 155 5 is_stmt 1 view .LVU251
 155:Core/Src/main.c ****     /* USER CODE END WHILE */
 1290              		.loc 1 155 20 is_stmt 0 view .LVU252
 1291 009e 064B     		ldr	r3, .L128+4
 1292 00a0 4FF48062 		mov	r2, #1024
 1293 00a4 1A60     		str	r2, [r3]
 135:Core/Src/main.c ****   {  
 1294              		.loc 1 135 9 is_stmt 1 view .LVU253
 1295              	.L125:
 135:Core/Src/main.c ****   {  
 1296              		.loc 1 135 3 view .LVU254
 145:Core/Src/main.c ****     heartbeat();
 1297              		.loc 1 145 5 view .LVU255
 145:Core/Src/main.c ****     heartbeat();
 1298              		.loc 1 145 10 is_stmt 0 view .LVU256
 1299 00a6 064B     		ldr	r3, .L128+12
 1300 00a8 0022     		movs	r2, #0
 1301 00aa 1A60     		str	r2, [r3]
 145:Core/Src/main.c ****     heartbeat();
 1302              		.loc 1 145 5 view .LVU257
 1303 00ac E3E7     		b	.L122
 1304              	.L127:
 153:Core/Src/main.c ****     }
 1305              		.loc 1 153 7 is_stmt 1 view .LVU258
 1306 00ae FFF7FEFF 		bl	Error_Handler
 1307              	.LVL77:
 1308              	.L129:
 1309 00b2 00BF     		.align	2
 1310              	.L128:
 1311 00b4 00000000 		.word	hcan
 1312 00b8 00000000 		.word	.LANCHOR3
 1313 00bc 00000000 		.word	.LANCHOR4
 1314 00c0 00000000 		.word	.LANCHOR5
 1315 00c4 00000000 		.word	.LANCHOR2
 1316              		.cfi_endproc
 1317              	.LFE123:
 1319              		.global	RxFlag
 1320              		.global	LIGHTS_ID
 1321              		.global	i
 1322              		.global	UART_Start_Flag
 1323              		.global	RXID
 1324              		.global	canTxMailbox
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 36


 1325              		.global	canRxMailbox
 1326              		.global	txData
 1327              		.global	rxData
 1328              		.global	txHeader
 1329              		.global	rxHeader
 1330              		.section	.bss.RXID,"aw",%nobits
 1331              		.align	2
 1334              	RXID:
 1335 0000 00000000 		.space	4
 1336              		.section	.bss.RxFlag,"aw",%nobits
 1337              		.align	2
 1340              	RxFlag:
 1341 0000 00000000 		.space	4
 1342              		.section	.bss.canRxMailbox,"aw",%nobits
 1343              		.align	2
 1346              	canRxMailbox:
 1347 0000 00000000 		.space	4
 1348              		.section	.bss.canTxMailbox,"aw",%nobits
 1349              		.align	2
 1350              		.set	.LANCHOR2,. + 0
 1353              	canTxMailbox:
 1354 0000 00000000 		.space	4
 1355              		.section	.bss.i,"aw",%nobits
 1356              		.align	2
 1357              		.set	.LANCHOR5,. + 0
 1360              	i:
 1361 0000 00000000 		.space	4
 1362              		.section	.bss.rxData,"aw",%nobits
 1363              		.align	2
 1364              		.set	.LANCHOR0,. + 0
 1367              	rxData:
 1368 0000 00000000 		.space	8
 1368      00000000 
 1369              		.section	.bss.rxHeader,"aw",%nobits
 1370              		.align	2
 1371              		.set	.LANCHOR1,. + 0
 1374              	rxHeader:
 1375 0000 00000000 		.space	28
 1375      00000000 
 1375      00000000 
 1375      00000000 
 1375      00000000 
 1376              		.section	.bss.txData,"aw",%nobits
 1377              		.align	2
 1378              		.set	.LANCHOR4,. + 0
 1381              	txData:
 1382 0000 00000000 		.space	8
 1382      00000000 
 1383              		.section	.bss.txHeader,"aw",%nobits
 1384              		.align	2
 1385              		.set	.LANCHOR3,. + 0
 1388              	txHeader:
 1389 0000 00000000 		.space	24
 1389      00000000 
 1389      00000000 
 1389      00000000 
 1389      00000000 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 37


 1390              		.section	.data.UART_Start_Flag,"aw"
 1391              		.align	2
 1394              	UART_Start_Flag:
 1395 0000 01000000 		.word	1
 1396              		.section	.rodata.LIGHTS_ID,"a"
 1397              		.align	2
 1400              	LIGHTS_ID:
 1401 0000 30070000 		.word	1840
 1402              		.text
 1403              	.Letext0:
 1404              		.file 3 "c:\\users\\user\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 1405              		.file 4 "c:\\users\\user\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 1406              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1407              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1408              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1409              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1410              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1411              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1412              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 1413              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1414              		.file 13 "Core/Inc/can.h"
 1415              		.file 14 "Core/Inc/tim.h"
 1416              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1417              		.file 16 "Core/Inc/usart.h"
 1418              		.file 17 "Core/Inc/gpio.h"
 1419              		.file 18 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:20     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:26     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:94     .text.HAL_TIM_PeriodElapsedCallback:0000000000000048 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:100    .text.Brake:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:106    .text.Brake:0000000000000000 Brake
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:127    .text.Brake:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:132    .text.BrakeR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:138    .text.BrakeR:0000000000000000 BrakeR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:159    .text.BrakeR:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:164    .text.FogF:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:170    .text.FogF:0000000000000000 FogF
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:192    .text.FogFR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:198    .text.FogFR:0000000000000000 FogFR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:220    .text.FogR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:226    .text.FogR:0000000000000000 FogR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:247    .text.FogR:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:252    .text.FogRR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:258    .text.FogRR:0000000000000000 FogRR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:279    .text.FogRR:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:284    .text.Day:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:290    .text.Day:0000000000000000 Day
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:312    .text.DayR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:318    .text.DayR:0000000000000000 DayR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:340    .text.RearPos:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:346    .text.RearPos:0000000000000000 RearPos
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:367    .text.RearPos:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:372    .text.RearPosR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:378    .text.RearPosR:0000000000000000 RearPosR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:399    .text.RearPosR:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:404    .text.Horn:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:410    .text.Horn:0000000000000000 Horn
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:431    .text.Horn:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:436    .text.HornR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:442    .text.HornR:0000000000000000 HornR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:463    .text.HornR:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:468    .text.Reverse:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:474    .text.Reverse:0000000000000000 Reverse
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:495    .text.Reverse:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:500    .text.ReverseR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:506    .text.ReverseR:0000000000000000 ReverseR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:527    .text.ReverseR:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:532    .text.FrontFull:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:538    .text.FrontFull:0000000000000000 FrontFull
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:559    .text.FrontFull:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:564    .text.FrontFullR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:570    .text.FrontFullR:0000000000000000 FrontFullR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:591    .text.FrontFullR:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:596    .text.FrontHigh:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:602    .text.FrontHigh:0000000000000000 FrontHigh
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:624    .text.FrontHighR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:630    .text.FrontHighR:0000000000000000 FrontHighR
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:652    .text.FullIOReset:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:658    .text.FullIOReset:0000000000000000 FullIOReset
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:722    .text.FullIOReset:0000000000000054 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:728    .text.LightsRefresh:0000000000000000 $t
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 39


C:\Users\User\AppData\Local\Temp\ccjjAszT.s:734    .text.LightsRefresh:0000000000000000 LightsRefresh
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:886    .text.LightsRefresh:00000000000000a8 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:891    .text.Error_Handler:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:897    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:929    .text.SystemClock_Config:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:935    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1032   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1038   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1084   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000028 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1092   .text.heartbeat:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1098   .text.heartbeat:0000000000000000 heartbeat
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1131   .text.heartbeat:0000000000000020 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1139   .text.main:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1145   .text.main:0000000000000000 main
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1311   .text.main:00000000000000b4 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1340   .bss.RxFlag:0000000000000000 RxFlag
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1400   .rodata.LIGHTS_ID:0000000000000000 LIGHTS_ID
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1360   .bss.i:0000000000000000 i
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1394   .data.UART_Start_Flag:0000000000000000 UART_Start_Flag
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1334   .bss.RXID:0000000000000000 RXID
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1353   .bss.canTxMailbox:0000000000000000 canTxMailbox
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1346   .bss.canRxMailbox:0000000000000000 canRxMailbox
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1381   .bss.txData:0000000000000000 txData
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1367   .bss.rxData:0000000000000000 rxData
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1388   .bss.txHeader:0000000000000000 txHeader
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1374   .bss.rxHeader:0000000000000000 rxHeader
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1331   .bss.RXID:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1337   .bss.RxFlag:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1343   .bss.canRxMailbox:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1349   .bss.canTxMailbox:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1356   .bss.i:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1363   .bss.rxData:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1370   .bss.rxHeader:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1377   .bss.txData:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1384   .bss.txHeader:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1391   .data.UART_Start_Flag:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\ccjjAszT.s:1397   .rodata.LIGHTS_ID:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
HAL_GPIO_WritePin
HAL_TIM_Base_Stop_IT
htim2
HAL_TIM_Base_Start_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_CAN_GetRxMessage
HAL_CAN_AddTxMessage
HAL_Delay
hcan
HAL_Init
HAL_CAN_ConfigFilter
MX_GPIO_Init
MX_CAN_Init
MX_USART2_UART_Init
MX_TIM2_Init
ARM GAS  C:\Users\User\AppData\Local\Temp\ccjjAszT.s 			page 40


HAL_CAN_ActivateNotification
HAL_CAN_Start
